{"version":3,"sources":["components/AdminPanel.js"],"names":["AllSources","className","id","defaultMessage","page","tabs","label","link","path","exact","key","Element","SingleJamia","defaultSort","column","order","api","categories","name","bridge","input","options","value","columns","sort","colCode","SingleSourceSubmission","data","setData","useState","loading","setLoading","accept","fetch","method","headers","body","JSON","stringify","_id","then","res","json","resData","code","prev","filter","submissions","alert","catch","err","console","log","reject","status","role","JamiaSubmission","MuftiSubmission","locale","useContext","SiteContext","showFull","setShowFull","Date","joined","day","month","year","primeMufti","address","href","contact","replace","appl","designation","mob","onClick","grad","versity","ghost","remove","window","confirm","item","patchApi","Jamia","jamia","Mufti","mufti","fatwa","defaultValue","Input","pattern","fieldCode","max","founder","Textarea","tel","about","title","add","AllFatwa","injectIntl","history","location","match","intl","SingleFatwa","default","fieldName","formatMessage","chip","autoFocus","required","ID","maxHeight","topics","map","option","display","SingleFatwaSubmission","setFatwaToEdit","open","setOpen","useHistory","data-id","createdAt","topic","translation","ques","ans","ref","i","book","part","sura","aayat","hadith","hadithNo","disabled","push","source","target","to","SinglePatreon","Patreons","UserReview","SingleUserQuestions","type","SingleUserReview","user","ansCount","QuestionFeed","NewQuestions","abortController","AbortController","signal","setSort","useEffect","obj","sortOrder","Object","keys","join","url","abort","length","onChange","icon","SingleQuestion","setQues","container","useRef","e","current","submitted","getFullYear","parts","toLowerCase","actions","action","SS","set","values","number","reports","UserQuestion","userQues","setUserQues","params","content","Answer","report","Report","vote","count","voters","pathname","ans_id","message","subject","ScrappedFatwas","SingleScrappedFatwa","showForm","setShowForm","containerClass","fetchData","AdminPanel","setSidebarSize","views","innerWidth","component","props","FourOFour"],"mappings":"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","file":"static/js/4.c0ceffd0.chunk.js","sourcesContent":["import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { Link, Route, Switch, useHistory, Redirect } from \"react-router-dom\";\nimport { SiteContext } from \"../Context.js\";\nimport \"./CSS/JamiaProfile.min.css\";\nimport \"./CSS/AdminPanel.min.css\";\nimport {\n  Input,\n  Textarea,\n  Combobox,\n  topics,\n  Submit,\n  ID,\n  SS,\n} from \"./FormElements\";\nimport {\n  DataEditForm,\n  PasswordEditForm,\n  AddFatwaForm,\n  ScrappedFawtaForm,\n} from \"./Forms\";\nimport { Tabs, Sidebar, View, Actions, LoadingPost } from \"./TableElements\";\nimport {\n  FormattedDate,\n  FormattedNumber,\n  FormattedMessage,\n  FormattedTimeParts,\n  injectIntl,\n} from \"react-intl\";\nimport FourOFour from \"./FourOFour\";\nimport { Modal } from \"./Modals\";\n\nconst encodeURL = (obj) =>\n  Object.keys(obj)\n    .map((key) => `${key}=${obj[key]}`)\n    .join(\"&\");\n\nfunction AllSources() {\n  return (\n    <div className=\"view\">\n      <h1 className=\"viewTitle\">\n        <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n      </h1>\n      <Tabs\n        page=\"/admin/sources/\"\n        tabs={[\n          {\n            label: <FormattedMessage id=\"active\" defaultMessage=\"Active\" />,\n            link: \"active\",\n          },\n          {\n            label: <FormattedMessage id=\"pending\" defaultMessage=\"Pending\" />,\n            link: \"Submissions\",\n          },\n        ]}\n      />\n      <Switch>\n        <Route path=\"/admin/sources\" exact>\n          <View\n            key=\"allJamia\"\n            Element={SingleJamia}\n            defaultSort={{ column: \"joined\", order: \"des\" }}\n            id=\"allJamia\"\n            api=\"api/admin/sources/active/filter?\"\n            categories={[\n              {\n                name: \"role\",\n                bridge: \"is\",\n                input: (\n                  <Combobox\n                    label=<FormattedMessage id=\"type\" defaultMessage=\"Type\" />\n                    options={[\n                      { label: \"Jamia\", value: \"jamia\" },\n                      { label: \"Mufti\", value: \"mufti\" },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"id\" defaultMessage=\"Id\" />,\n                sort: false,\n                colCode: \"id\",\n              },\n              {\n                column: <FormattedMessage id=\"type\" defaultMessage=\"Type\" />,\n                sort: true,\n                colCode: \"role\",\n              },\n              {\n                column: <FormattedMessage id=\"name\" defaultMessage=\"Name\" />,\n                sort: false,\n                colCode: \"name\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"joined\" defaultMessage=\"Joined\" />\n                ),\n                sort: true,\n                colCode: \"joined\",\n              },\n              {\n                column: <FormattedMessage id=\"fatwa\" defaultMessage=\"Fatwa\" />,\n                sort: true,\n                colCode: \"fatwa\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"contact\" defaultMessage=\"Contact\" />\n                ),\n                sort: false,\n                colCode: \"contact\",\n              },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/sources/active\">\n          <View\n            key=\"allJamia\"\n            Element={SingleJamia}\n            defaultSort={{ column: \"joined\", order: \"des\" }}\n            id=\"allJamia\"\n            api=\"api/admin/sources/active/filter?\"\n            categories={[\n              {\n                name: \"role\",\n                bridge: \"is\",\n                input: (\n                  <Combobox\n                    label=<FormattedMessage id=\"type\" defaultMessage=\"Type\" />\n                    options={[\n                      { label: \"Jamia\", value: \"jamia\" },\n                      { label: \"Mufti\", value: \"mufti\" },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"id\" defaultMessage=\"Id\" />,\n                sort: false,\n                colCode: \"id\",\n              },\n              {\n                column: <FormattedMessage id=\"type\" defaultMessage=\"Type\" />,\n                sort: true,\n                colCode: \"role\",\n              },\n              {\n                column: <FormattedMessage id=\"name\" defaultMessage=\"Name\" />,\n                sort: false,\n                colCode: \"name\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"joined\" defaultMessage=\"Joined\" />\n                ),\n                sort: true,\n                colCode: \"joined\",\n              },\n              {\n                column: <FormattedMessage id=\"fatwa\" defaultMessage=\"Fatwa\" />,\n                sort: true,\n                colCode: \"fatwa\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"contact\" defaultMessage=\"Contact\" />\n                ),\n                sort: false,\n                colCode: \"contact\",\n              },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/sources/submissions\">\n          <View\n            key=\"allSourceSubmissions\"\n            Element={SingleSourceSubmission}\n            defaultSort={{ column: \"joined\", order: \"des\" }}\n            id=\"jamiaSubmissions\"\n            api=\"api/admin/sources/submissions/filter?\"\n            categories={[\n              {\n                name: \"role\",\n                input: (\n                  <Combobox\n                    label=<FormattedMessage id=\"type\" defaultMessage=\"Type\" />\n                    options={[\n                      { label: \"jamia\", value: \"jamia\" },\n                      { label: \"mufti\", value: \"mufti\" },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"joined\",\n              },\n              {\n                column: <FormattedMessage id=\"type\" defaultMessage=\"Type\" />,\n                sort: true,\n                colCode: \"role\",\n              },\n              {\n                column: <FormattedMessage id=\"name\" defaultMessage=\"Name\" />,\n                sort: false,\n                colCode: \"name\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"contact\" defaultMessage=\"Contact\" />\n                ),\n                sort: false,\n                colCode: \"contact\",\n              },\n            ]}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nfunction SingleSourceSubmission({ data, setData }) {\n  const [loading, setLoading] = useState(false);\n  function accept() {\n    setLoading(true);\n    fetch(`/api/admin/source/accept`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: data._id }),\n    })\n      .then((res) => res.json())\n      .then((resData) => {\n        if (resData.code === \"ok\") {\n          setLoading(false);\n          setData((prev) => {\n            return prev.filter((submissions) => submissions._id !== data._id);\n          });\n        } else {\n          alert(\"someting went wrong\");\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n      });\n  }\n  function reject() {\n    setLoading(true);\n    fetch(`/api/admin/source/reject`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: data._id }),\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => {\n            return prev.filter((submissions) => submissions._id !== data._id);\n          });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n  return data.role === \"jamia\" ? (\n    <JamiaSubmission\n      loading={loading}\n      data={data}\n      accept={accept}\n      reject={reject}\n    />\n  ) : (\n    <MuftiSubmission\n      loading={loading}\n      data={data}\n      accept={accept}\n      reject={reject}\n    />\n  );\n}\nfunction JamiaSubmission({ loading, data, accept, reject }) {\n  const { locale } = useContext(SiteContext);\n  const [showFull, setShowFull] = useState(false);\n  return !showFull ? (\n    <tr onClick={() => (showFull ? setShowFull(false) : setShowFull(true))}>\n      <td>\n        <FormattedDate\n          value={new Date(data.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td>{data.role}</td>\n      <td>\n        {data.name[locale]}\n        <span>{data.primeMufti[locale]}</span>\n      </td>\n      <td>\n        <a href={`tel:${data.contact}`}>{data.contact.replace(\"+88\", \"\")}</a>\n      </td>\n    </tr>\n  ) : (\n    <tr className=\"full\">\n      <td className=\"label\">Submitted</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(data.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">ID</td>\n      <td className=\"data\">{data.id}</td>\n      <td className=\"label\">Name</td>\n      <td className=\"data\">{data.name[locale]}</td>\n      <td className=\"label\">Prime Mufti</td>\n      <td className=\"data\">{data.primeMufti[locale]}</td>\n      <td className=\"label\">Address</td>\n      <td className=\"data\">{data.address}</td>\n      <td className=\"label\">Contact</td>\n      <td className=\"data\">\n        <a href={`tel:${data.contact}`}>{data.contact.replace(\"+88\", \"\")}</a>\n      </td>\n      <td className=\"label\">Applicant's Name</td>\n      <td className=\"data\">{data.appl.name}</td>\n      <td className=\"label\">Applicant's designation</td>\n      <td className=\"data\">{data.appl.designation}</td>\n      <td className=\"label\">Applicant's mobile</td>\n      <td className=\"data\">\n        <a href={`tel:${data.appl.mob}`}>{data.appl.mob.replace(\"+88\", \"\")}</a>\n      </td>\n      <td className=\"data btns\">\n        <Submit\n          loading={loading}\n          onClick={accept}\n          label={\n            <>\n              <ion-icon name=\"checkmark-outline\"></ion-icon> Accept\n            </>\n          }\n        />\n        <Submit\n          loading={loading}\n          onClick={reject}\n          label={\n            <>\n              <ion-icon name=\"close-outline\"></ion-icon> Reject\n            </>\n          }\n        />\n      </td>\n    </tr>\n  );\n}\nfunction MuftiSubmission({ loading, data, accept, reject }) {\n  const { locale } = useContext(SiteContext);\n  const [showFull, setShowFull] = useState(false);\n  return !showFull ? (\n    <tr onClick={() => (showFull ? setShowFull(false) : setShowFull(true))}>\n      <td>\n        <FormattedDate\n          value={new Date(data.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td>{data.role}</td>\n      <td>\n        {data.name[locale]}\n        <span>\n          {data.grad.versity[locale]}, {data.grad.year}\n        </span>\n      </td>\n      <td>\n        <a href={`tel:${data.mob}`}>{data.mob.replace(\"+88\", \"\")}</a>\n      </td>\n    </tr>\n  ) : (\n    <tr className=\"full\">\n      <td className=\"label\">Submitted</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(data.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">ID</td>\n      <td className=\"data\">{data.id}</td>\n      <td className=\"label\">Name</td>\n      <td className=\"data\">{data.name[locale]}</td>\n      <td className=\"label\">Address</td>\n      <td className=\"data\">{data.address}</td>\n      <td className=\"label\">Graduation</td>\n      <td className=\"data\">{data.grad.versity[locale]}</td>\n      <td className=\"label\">Contact</td>\n      <td className=\"data\">\n        <a href={`tel:${data.mob}`}>{data.mob.replace(\"+88\", \"\")}</a>\n      </td>\n      <td className=\"data btns\">\n        <Submit\n          loading={loading}\n          onClick={accept}\n          label={\n            <>\n              <ion-icon name=\"checkmark-outline\"></ion-icon> Accept\n            </>\n          }\n        />\n        <Submit\n          loading={loading}\n          onClick={reject}\n          label={\n            <>\n              <ion-icon name=\"close-outline\"></ion-icon> Reject\n            </>\n          }\n        />\n      </td>\n    </tr>\n  );\n}\nfunction SingleJamia({ data, setData }) {\n  const [loading, setLoading] = useState(false);\n  function ghost(_id) {\n    console.log(_id);\n  }\n  function remove() {\n    setLoading(true);\n    if (window.confirm(\"You want to delete this jamia\")) {\n      fetch(`/api/admin/source/`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ _id: data._id }),\n      })\n        .then((res) => {\n          setLoading(false);\n          if (res.status === 200) {\n            setData((prev) => {\n              return prev.filter((item) => item._id !== data._id);\n            });\n          } else {\n            alert(\"something went wrong\");\n          }\n        })\n        .catch((err) => {\n          setLoading(false);\n          console.log(err);\n          alert(\"something went wrong\");\n        });\n    }\n  }\n  const patchApi = `/api/admin/source/edit/${data._id}`;\n  return data.role === \"jamia\" ? (\n    <Jamia jamia={data} remove={remove} ghost={ghost} patchApi={patchApi} />\n  ) : (\n    <Mufti mufti={data} remove={remove} ghost={ghost} patchApi={patchApi} />\n  );\n}\nfunction Jamia({ loading, jamia, ghost, remove, patchApi }) {\n  const { locale } = useContext(SiteContext);\n  const [showFull, setShowFull] = useState(false);\n  return !showFull ? (\n    <tr onClick={() => setShowFull(true)}>\n      <td className=\"jamiaId\">{jamia.id}</td>\n      <td className=\"jamiaType\">{jamia.role}</td>\n      <td className=\"jamiaName\">\n        {jamia.name[locale]}\n        <span>{jamia.primeMufti[locale]}</span>\n      </td>\n      <td className=\"jamiaJoined\">\n        <FormattedDate\n          value={new Date(jamia.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"jamiaFatwaCount\">\n        <FormattedNumber value={new Date(jamia.fatwa)} />\n      </td>\n      <td className=\"jamiaContact\">\n        <a title=\"Call Jamia\" href={`tel:${jamia.contact}`}>\n          {jamia.contact.replace(\"+88\", \"\")}\n        </a>\n      </td>\n    </tr>\n  ) : (\n    <tr className=\"full\">\n      <td className=\"label\">Joined</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(jamia.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">Fatwa</td>\n      <td className=\"data\">\n        <FormattedNumber value={jamia.fatwa} />\n      </td>\n      <td className=\"label\">ID</td>\n      <td className=\"data\">{jamia.id}</td>\n      <td className=\"label\">Password</td>\n      <td className=\"data\">\n        <PasswordEditForm api={patchApi} />\n      </td>\n      <td className=\"label\">Name (Bangla)</td>\n      <td className=\"data\">\n        <DataEditForm\n          api={patchApi}\n          defaultValue={jamia.name[\"bn-BD\"]}\n          Element={Input}\n          pattern={/^[ঀ-৾\\s(),]+$/}\n          fieldCode=\"name.bn-BD\"\n        />\n      </td>\n      <td className=\"label\">Name (Enlish)</td>\n      <td className=\"data\">\n        <DataEditForm\n          api={patchApi}\n          defaultValue={jamia.name[\"en-US\"]}\n          Element={Input}\n          pattern={/^[a-zA-Z\\s(),]+$/}\n          fieldCode=\"name.en-US\"\n        />\n      </td>\n      <td className=\"label\">Prime Mufti (Bangla)</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.primeMufti[\"bn-BD\"]}\n          Element={Input}\n          max={200}\n          fieldCode=\"primeMufti.bn-BD\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Prime Mufti (English)</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.primeMufti[\"en-US\"]}\n          Element={Input}\n          max={200}\n          fieldCode=\"primeMufti.en-US\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Founder</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.founder}\n          Element={Textarea}\n          max={200}\n          fieldCode=\"founder\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Address</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.address}\n          Element={Textarea}\n          max={200}\n          fieldCode=\"address\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Contact</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.contact}\n          Element={Input}\n          pattern={/^\\+8801\\d{0,9}$/}\n          tel={true}\n          fieldCode=\"contact\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">About</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.about}\n          Element={Textarea}\n          pattern={/^[ঀ-ৣৰ-৾a-zA-Z\\s(),-]+$/}\n          fieldCode=\"about\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Applicant's Name</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.appl.name}\n          Element={Input}\n          pattern={/^[ঀ-ৣৰ-৾a-zA-Z\\s(),-]+$/}\n          fieldCode=\"appl.name\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Applicant's designation</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.appl.designation}\n          Element={Input}\n          pattern={/^[ঀ-ৣৰ-৾a-zA-Z\\s(),-]+$/}\n          fieldCode=\"appl.designation\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Applicant's mobile</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.appl.mob}\n          Element={Input}\n          pattern={/^\\+8801\\d{0,9}$/}\n          tel={true}\n          fieldCode=\"appl.mob\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"data btns\">\n        <Submit\n          loading={loading}\n          onClick={ghost}\n          label={\n            <>\n              <ion-icon name=\"skull-outline\"></ion-icon> Ghost\n            </>\n          }\n        />\n        <button className=\"hideDetail\" onClick={() => setShowFull(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon>Hide Detail\n        </button>\n        <Submit\n          loading={loading}\n          onClick={remove}\n          label={\n            <>\n              <ion-icon name=\"trash-outline\"></ion-icon> Remove\n            </>\n          }\n        />\n      </td>\n    </tr>\n  );\n}\nfunction Mufti({ loading, mufti, ghost, remove, patchApi }) {\n  const { locale } = useContext(SiteContext);\n  const [showFull, setShowFull] = useState(false);\n  return !showFull ? (\n    <tr onClick={() => setShowFull(true)}>\n      <td className=\"jamiaId\">{mufti.id}</td>\n      <td className=\"jamiaType\">{mufti.role}</td>\n      <td className=\"jamiaName\">\n        {mufti.name[locale]}\n        <span>{mufti.add}</span>\n      </td>\n      <td className=\"jamiaJoined\">\n        <FormattedDate\n          value={new Date(mufti.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"jamiaFatwaCount\">\n        <FormattedNumber value={new Date(mufti.fatwa)} />\n      </td>\n      <td className=\"jamiaContact\">\n        <a title=\"Call Mufti\" href={`tel:${mufti.mob}`}>\n          {mufti.mob.replace(\"+88\", \"\")}\n        </a>\n      </td>\n    </tr>\n  ) : (\n    <tr className=\"full\">\n      <td className=\"label\">Joined</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(mufti.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">Fatwa</td>\n      <td className=\"data\">\n        <FormattedNumber value={mufti.fatwa} />\n      </td>\n      <td className=\"label\">ID</td>\n      <td className=\"data\">{mufti.id}</td>\n      <td className=\"label\">Password</td>\n      <td className=\"data\">\n        <PasswordEditForm api={patchApi} />\n      </td>\n      <td className=\"label\">Name (Bangla)</td>\n      <td className=\"data\">\n        <DataEditForm\n          api={patchApi}\n          defaultValue={mufti.name[\"bn-BD\"]}\n          Element={Input}\n          pattern={/^[ঀ-৾\\s(),]+$/}\n          fieldCode=\"name.bn-BD\"\n        />\n      </td>\n      <td className=\"label\">Name (Enlish)</td>\n      <td className=\"data\">\n        <DataEditForm\n          api={patchApi}\n          defaultValue={mufti.name[\"en-US\"]}\n          Element={Input}\n          pattern={/^[a-zA-Z\\s(),]+$/}\n          fieldCode=\"name.en-US\"\n        />\n      </td>\n      <td className=\"label\">Graduated from (Bangla)</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={mufti.grad.versity[\"bn-BD\"]}\n          Element={Input}\n          max={200}\n          fieldCode=\"grad.versity.bn-BD\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Graduated from (English)</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={mufti.grad.versity[\"en-US\"]}\n          Element={Input}\n          max={200}\n          fieldCode=\"grad.versity.en-US\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Graduation year</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={mufti.grad.year}\n          Element={Input}\n          max={200}\n          fieldCode=\"grad.year\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Address</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={mufti.add}\n          Element={Textarea}\n          max={200}\n          fieldCode=\"address\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Contact</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={mufti.mob}\n          Element={Input}\n          pattern={/^\\+8801\\d{0,9}$/}\n          tel={true}\n          fieldCode=\"contact\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">About</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={mufti.about}\n          Element={Textarea}\n          pattern={/^[ঀ-ৣৰ-৾a-zA-Z\\s(),-]+$/}\n          fieldCode=\"about\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"data btns\">\n        <Submit\n          loading={loading}\n          onClick={ghost}\n          label={\n            <>\n              <ion-icon name=\"skull-outline\"></ion-icon> Ghost\n            </>\n          }\n        />\n        <button className=\"hideDetail\" onClick={() => setShowFull(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon>Hide Detail\n        </button>\n        <Submit\n          loading={loading}\n          onClick={remove}\n          label={\n            <>\n              <ion-icon name=\"trash-outline\"></ion-icon> Remove\n            </>\n          }\n        />\n      </td>\n    </tr>\n  );\n}\n\nconst AllFatwa = injectIntl(({ history, location, match, intl }) => {\n  const { locale } = useContext(SiteContext);\n  return (\n    <div className=\"view\">\n      <h1 className=\"viewTitle\">\n        <FormattedMessage id=\"fatwa\" defaultMessage=\"Fatwa\" />\n      </h1>\n      <Tabs\n        page=\"/admin/fatwa/\"\n        tabs={[\n          {\n            label: <FormattedMessage id=\"live\" defaultMessage=\"Live\" />,\n            link: \"live\",\n          },\n          {\n            label: <FormattedMessage id=\"pending\" defaultMessage=\"pending\" />,\n            link: \"pending\",\n          },\n        ]}\n      />\n      <Switch>\n        <Route path=\"/admin/fatwa\" exact>\n          <View\n            key=\"allFatwa\"\n            Element={SingleFatwa}\n            id=\"allFatwa\"\n            api=\"api/admin/allfatwa/filter?\"\n            categories={[\n              {\n                default: true,\n                fieldName: \"title\",\n                name: intl.formatMessage({\n                  id: \"title\",\n                  defaultMessage: \"Title\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"titleChip\",\n                  defaultMessage: \"Title contains:\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"titleChip\"\n                      defaultMessage=\"Title contains:\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"topic\",\n                name: intl.formatMessage({\n                  id: \"topic\",\n                  defaultMessage: \"Topic\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"topicChip\",\n                  defaultMessage: \"Topic is\",\n                }),\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={300}\n                    label=<FormattedMessage\n                      id=\"topicChip\"\n                      defaultMessage=\"topic is\"\n                    />\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ques\",\n                name: intl.formatMessage({\n                  id: \"question\",\n                  defaultMessage: \"Question\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"quesChip\",\n                  defaultMessage: \"Question contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"quesChip\"\n                      defaultMessage=\"Question contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ans\",\n                name: intl.formatMessage({\n                  id: \"answer\",\n                  defaultMessage: \"Answer\",\n                }),\n                display: intl.formatMessage({\n                  id: \"ansChip\",\n                  defaultMessage: \"Answer contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"ansChip\"\n                      defaultMessage=\"Answer contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"translation\",\n                name: intl.formatMessage({\n                  id: \"translation\",\n                  defaultMessage: \"Translation\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"translationChip\",\n                  defaultMessage: \"Translation:\",\n                }),\n                input: (\n                  <Combobox\n                    maxHeight={500}\n                    label=<FormattedMessage\n                      id=\"translation\"\n                      defaultMessage=\"Translation:\"\n                    />\n                    options={[\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationAuto\",\n                          defaultMessage: \"Auto\",\n                        }),\n                        value: \"generated\",\n                      },\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationManual\",\n                          defaultMessage: \"Manual\",\n                        }),\n                        value: \"manual\",\n                      },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"source\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage\n                    id=\"translation\"\n                    defaultMessage=\"Translation\"\n                  />\n                ),\n                sort: true,\n                colCode: \"translation\",\n              },\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n                colCode: \"title\",\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n        <Route path=\"/admin/fatwa/live\">\n          <View\n            key=\"allFatwa\"\n            Element={SingleFatwa}\n            id=\"allFatwa\"\n            api=\"api/admin/allfatwa/filter?\"\n            categories={[\n              {\n                default: true,\n                fieldName: \"title\",\n                name: intl.formatMessage({\n                  id: \"title\",\n                  defaultMessage: \"Title\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"titleChip\",\n                  defaultMessage: \"Title contains:\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"titleChip\"\n                      defaultMessage=\"Title contains:\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"topic\",\n                name: intl.formatMessage({\n                  id: \"topic\",\n                  defaultMessage: \"Topic\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"topicChip\",\n                  defaultMessage: \"Topic is\",\n                }),\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={300}\n                    label=<FormattedMessage\n                      id=\"topicChip\"\n                      defaultMessage=\"topic is\"\n                    />\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ques\",\n                name: intl.formatMessage({\n                  id: \"question\",\n                  defaultMessage: \"Question\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"quesChip\",\n                  defaultMessage: \"Question contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"quesChip\"\n                      defaultMessage=\"Question contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ans\",\n                name: intl.formatMessage({\n                  id: \"answer\",\n                  defaultMessage: \"Answer\",\n                }),\n                display: intl.formatMessage({\n                  id: \"ansChip\",\n                  defaultMessage: \"Answer contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"ansChip\"\n                      defaultMessage=\"Answer contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"translation\",\n                name: intl.formatMessage({\n                  id: \"translation\",\n                  defaultMessage: \"Translation\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"translationChip\",\n                  defaultMessage: \"Translation:\",\n                }),\n                input: (\n                  <Combobox\n                    maxHeight={500}\n                    label=<FormattedMessage\n                      id=\"translation\"\n                      defaultMessage=\"Translation:\"\n                    />\n                    options={[\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationAuto\",\n                          defaultMessage: \"Auto\",\n                        }),\n                        value: \"generated\",\n                      },\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationManual\",\n                          defaultMessage: \"Manual\",\n                        }),\n                        value: \"manual\",\n                      },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"source\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage\n                    id=\"translation\"\n                    defaultMessage=\"Translation\"\n                  />\n                ),\n                sort: true,\n                colCode: \"translation\",\n              },\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n                colCode: \"title\",\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n        <Route path=\"/admin/fatwa/pending\">\n          <View\n            key=\"allFatwaSubmission\"\n            Element={SingleFatwaSubmission}\n            id=\"fatwaSubmissions\"\n            api=\"api/admin/fatwaSubmissions/filter?\"\n            categories={[\n              {\n                default: true,\n                fieldName: \"title\",\n                name: intl.formatMessage({\n                  id: \"title\",\n                  defaultMessage: \"Title\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"titleChip\",\n                  defaultMessage: \"Title contains:\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"titleChip\"\n                      defaultMessage=\"Title contains:\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"topic\",\n                name: intl.formatMessage({\n                  id: \"topic\",\n                  defaultMessage: \"Topic\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"topicChip\",\n                  defaultMessage: \"Topic is\",\n                }),\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={300}\n                    label=<FormattedMessage\n                      id=\"topicChip\"\n                      defaultMessage=\"topic is\"\n                    />\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ques\",\n                name: intl.formatMessage({\n                  id: \"question\",\n                  defaultMessage: \"Question\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"quesChip\",\n                  defaultMessage: \"Question contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"quesChip\"\n                      defaultMessage=\"Question contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ans\",\n                name: intl.formatMessage({\n                  id: \"answer\",\n                  defaultMessage: \"Answer\",\n                }),\n                display: intl.formatMessage({\n                  id: \"ansChip\",\n                  defaultMessage: \"Answer contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"ansChip\"\n                      defaultMessage=\"Answer contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"translation\",\n                name: intl.formatMessage({\n                  id: \"translation\",\n                  defaultMessage: \"Translation\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"translationChip\",\n                  defaultMessage: \"Translation:\",\n                }),\n                input: (\n                  <Combobox\n                    maxHeight={500}\n                    label=<FormattedMessage\n                      id=\"translation\"\n                      defaultMessage=\"Translation:\"\n                    />\n                    options={[\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationAuto\",\n                          defaultMessage: \"Auto\",\n                        }),\n                        value: \"generated\",\n                      },\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationManual\",\n                          defaultMessage: \"Manual\",\n                        }),\n                        value: \"manual\",\n                      },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"jamia\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n});\nfunction SingleFatwaSubmission({ data, setData }) {\n  const { locale, setFatwaToEdit } = useContext(SiteContext);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const fatwa = data;\n  const history = useHistory();\n  function editFatwaSubmission(id) {\n    setFatwaToEdit(fatwa);\n    history.push(\"/admin/newFatwa\");\n  }\n  function acceptFatwa() {\n    setLoading(true);\n    fetch(`/api/admin/fatwaSubmissions/accept/${fatwa._id}`, { method: \"POST\" })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setData((prev) => {\n            return prev.filter((item) => item._id !== fatwa._id);\n          });\n        } else {\n          alert(\"something went wrong\");\n        }\n      })\n      .catch((err) => {\n        alert(\"something went wrong!\");\n        console.log(err);\n      });\n  }\n  function removeSubmission() {\n    setLoading(true);\n    fetch(`/api/admin/fatwaSubmissions/remove/${fatwa._id}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => {\n            return prev.filter((item) => item._id !== fatwa._id);\n          });\n        } else {\n          alert(\"something went wrong!\");\n        }\n      })\n      .catch((err) => {\n        alert(\"something went wrong!\");\n        console.log(err);\n      });\n  }\n  return open ? (\n    <tr data-id={fatwa._id} className={`full ${loading ? \"loading\" : \"\"}`}>\n      <td className=\"label\">Submitted</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(fatwa.createdAt)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">topic</td>\n      <td className=\"data\">{fatwa.topic[locale]}</td>\n      <td className=\"label\">translation</td>\n      <td className=\"data\">{fatwa.translation ? \"Yes\" : \"No\"}</td>\n      <td className=\"label\">title (Bangla)</td>\n      <td className=\"data\">{fatwa.title[\"bn-BD\"]}</td>\n      {fatwa.title[\"en-US\"] && (\n        <>\n          <td className=\"label\">title (English)</td>\n          <td className=\"data\">{fatwa.title[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">question (Bangla)</td>\n      <td className=\"data\">{fatwa.ques[\"bn-BD\"]}</td>\n      {fatwa.ques[\"en-US\"] && (\n        <>\n          <td className=\"label\">question (English)</td>\n          <td className=\"data\">{fatwa.ques[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">answer (Bangla)</td>\n      <td className=\"data\">{fatwa.ans[\"bn-BD\"]}</td>\n      {fatwa.ans[\"en-US\"] && (\n        <>\n          <td className=\"label\">answer (English)</td>\n          <td className=\"data\">{fatwa.ans[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">Ref.</td>\n      <td className=\"data\">\n        <ul>\n          {fatwa.ref.map((item, i) => {\n            if (item.book) {\n              return (\n                <li key={item.book + item.part + item.page}>\n                  <FormattedMessage id=\"book\" defaultMessage=\"Book\" />:{\" \"}\n                  {item.book},{\" \"}\n                  <FormattedMessage id=\"part\" defaultMessage=\"Part\" />:{\" \"}\n                  <FormattedNumber value={item.part} />,{\" \"}\n                  <FormattedMessage id=\"page\" defaultMessage=\"Page\" />:{\" \"}\n                  <FormattedNumber value={item.page} />\n                </li>\n              );\n            } else if (item.sura) {\n              return (\n                <li key={item.sura + item.aayat}>\n                  <FormattedMessage id=\"sura\" defaultMessage=\"Sura\" />:{\" \"}\n                  {item.sura},\n                  <FormattedMessage id=\"aayat\" defaultMessage=\"Aayat\" />:{\" \"}\n                  <FormattedNumber value={item.aayat} />\n                </li>\n              );\n            } else {\n              return (\n                <li key={item.hadith + item.hadithNo}>\n                  <FormattedMessage id=\"hadith\" defaultMessage=\"hadith book\" />:{\" \"}\n                  {item.hadith},{\" \"}\n                  <FormattedMessage id=\"hadithNo\" defaultMessage=\"Hadith No\" />:{\" \"}\n                  <FormattedNumber value={item.hadithNo} />\n                </li>\n              );\n            }\n          })}\n        </ul>\n      </td>\n      <td className=\"btns data\">\n        <Submit\n          loading={loading}\n          onClick={acceptFatwa}\n          label={\n            <>\n              <ion-icon name=\"checkmark-outline\"></ion-icon> Accept\n            </>\n          }\n        />\n        <button disabled={loading} onClick={() => setOpen(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon> Hide Detail\n        </button>\n        <button disabled={loading} onClick={editFatwaSubmission}>\n          <ion-icon name=\"pencil-outline\"></ion-icon> Edit\n        </button>\n        <Submit\n          loading={loading}\n          onClick={removeSubmission}\n          label={\n            <>\n              <ion-icon name=\"trash-outline\"></ion-icon> Delete\n            </>\n          }\n        />\n      </td>\n    </tr>\n  ) : (\n    <tr\n      className={loading ? \"loading\" : \"\"}\n      data-id={fatwa._id}\n      onClick={() => setOpen(true)}\n    >\n      <td>\n        <FormattedDate\n          value={new Date(fatwa.createdAt)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td>{fatwa.topic[locale]}</td>\n      <td>{fatwa.source?.name[locale] || \"NA\"}</td>\n      <td>{fatwa.title[locale]}</td>\n    </tr>\n  );\n}\nfunction SingleFatwa({ data, setData }) {\n  const { locale, setFatwaToEdit } = useContext(SiteContext);\n  const history = useHistory();\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const fatwa = data;\n  function deleteFatwa() {\n    setLoading(true);\n    fetch(`/api/admin/fatwa/`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        fatwa: fatwa._id,\n        source: fatwa.source?._id || null,\n      }),\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => {\n            return prev.filter((item) => item._id !== fatwa._id);\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  return open ? (\n    <tr data-id={fatwa._id} className={`${open ? \"full\" : \"\"}`}>\n      <td className=\"label\">Added</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(fatwa.createdAt)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">jamia</td>\n      <td className=\"data\">{fatwa.jamia}</td>\n      <td className=\"label\">topic</td>\n      <td className=\"data\">{fatwa.topic[locale]}</td>\n      <td className=\"label\">title (Bangla)</td>\n      <td className=\"data\">\n        <Link target=\"_blank\" to={`/fatwa/${fatwa.link[\"bn-BD\"]}`}>\n          {fatwa.title[\"bn-BD\"]}\n        </Link>\n      </td>\n      {fatwa.title[\"en-US\"] && (\n        <>\n          <td className=\"label\">title (English)</td>\n          <td className=\"data\">\n            <Link to={`/fatwa/${fatwa.link[\"en-US\"]}`}>\n              {fatwa.title[\"en-US\"]}\n            </Link>\n          </td>\n        </>\n      )}\n      <td className=\"label\">question (Bangla)</td>\n      <td className=\"data\">{fatwa.ques[\"bn-BD\"]}</td>\n      {fatwa.ques[\"en-US\"] && (\n        <>\n          <td className=\"label\">question (English)</td>\n          <td className=\"data\">{fatwa.ques[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">answer (Bangla)</td>\n      <td className=\"data\">{fatwa.ans[\"bn-BD\"]}</td>\n      {fatwa.ans[\"en-US\"] && (\n        <>\n          <td className=\"label\">answer (English)</td>\n          <td className=\"data\">{fatwa.ans[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">Ref.</td>\n      <td className=\"data\">\n        <ul>\n          {fatwa.ref &&\n            fatwa.ref.map((item, i) => {\n              if (item.book) {\n                return (\n                  <li key={item.book + item.part + item.page}>\n                    <FormattedMessage id=\"book\" defaultMessage=\"Book\" />:{\" \"}\n                    {item.book},{\" \"}\n                    <FormattedMessage id=\"part\" defaultMessage=\"Part\" />:{\" \"}\n                    <FormattedNumber value={item.part} />,{\" \"}\n                    <FormattedMessage id=\"page\" defaultMessage=\"Page\" />:{\" \"}\n                    <FormattedNumber value={item.page} />\n                  </li>\n                );\n              } else if (item.sura) {\n                return (\n                  <li key={item.sura + item.aayat}>\n                    <FormattedMessage id=\"sura\" defaultMessage=\"Sura\" />:{\" \"}\n                    {item.sura},{\" \"}\n                    <FormattedMessage id=\"aayat\" defaultMessage=\"Aayat\" />:{\" \"}\n                    <FormattedNumber value={item.aayat} />\n                  </li>\n                );\n              } else {\n                return (\n                  <li key={item.hadith + item.hadithNo}>\n                    <FormattedMessage\n                      id=\"hadith\"\n                      defaultMessage=\"hadith book\"\n                    />\n                    : {item.hadith},{\" \"}\n                    <FormattedMessage\n                      id=\"hadithNo\"\n                      defaultMessage=\"Hadith No\"\n                    />\n                    : <FormattedNumber value={item.hadithNo} />\n                  </li>\n                );\n              }\n            })}\n        </ul>\n      </td>\n      <td className=\"btns data\">\n        <button\n          onClick={() => {\n            setFatwaToEdit(fatwa);\n            history.push(\"/admin/editFatwa/\" + fatwa._id);\n          }}\n        >\n          <ion-icon name=\"create-outline\"></ion-icon> Edit\n        </button>\n        <button onClick={() => setOpen(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon> Hide Detail\n        </button>\n        <Submit\n          loading={loading}\n          onClick={deleteFatwa}\n          label={\n            <>\n              <ion-icon name=\"trash-outline\"></ion-icon> Delete\n            </>\n          }\n        />\n      </td>\n    </tr>\n  ) : (\n    <tr data-id={fatwa._id} onClick={() => setOpen(true)}>\n      <td>{fatwa.source?.name[locale] || \"NA\"}</td>\n      <td>{fatwa.topic[locale]}</td>\n      <td>{fatwa.translation ? \"Yes\" : \"No\"}</td>\n      <td>\n        <FormattedDate\n          value={new Date(fatwa.createdAt)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td>{fatwa.title[locale]}</td>\n    </tr>\n  );\n}\n\nfunction SinglePatreon() {\n  return (\n    <tr>\n      <td>Make patreon rows</td>\n    </tr>\n  );\n}\nfunction Patreons() {\n  return (\n    <div className=\"view\">\n      <h1>Patreons</h1>\n      <Tabs page=\"/admin/patreons/\" tabs={[\"All\"]} />\n      <Switch>\n        <Route path=\"/admin/patreons\">\n          <View\n            Element={SinglePatreon}\n            defaultSort={{ column: \"date\", order: \"des\" }}\n            id=\"allPatreons\"\n            api=\"api/admin/patreons/filter?\"\n            categories={[]}\n            columns={[\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"amount\", sort: true, colCode: \"amount\" },\n              { column: \"date\", sort: true, colCode: \"date\" },\n            ]}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction UserReview() {\n  const { locale } = useContext(SiteContext);\n  return (\n    <div className=\"view\">\n      <h1>\n        <FormattedMessage id=\"review\" defaultMessage=\"User Review\" />\n      </h1>\n      <Tabs\n        page=\"/admin/user/\"\n        tabs={[\n          { label: \"Questions\", link: \"questions\" },\n          { label: \"Answered Question\", link: \"answeredQuestion\" },\n          { label: \"Review\", link: \"review\" },\n          { label: \"Report\", link: \"report\" },\n        ]}\n      />\n      <Switch>\n        <Route path=\"/admin/user\" exact>\n          <View\n            Element={SingleUserQuestions}\n            defaultSort={{ column: \"submitted\", order: \"des\" }}\n            id=\"userSubmissions\"\n            api=\"api/admin/userQuestion/filter?\"\n            categories={[\n              {\n                name: \"topic\",\n                input: (\n                  <Combobox\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                    required={true}\n                  ></Combobox>\n                ),\n              },\n              {\n                name: \"name\",\n                input: <Input label=\"Name\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"answered\",\n                input: (\n                  <Combobox\n                    label=\"Answered\"\n                    options={[\n                      { label: \"Answered\", value: true },\n                      { label: \"Not answered\", value: false },\n                    ]}\n                    required={true}\n                  />\n                ),\n              },\n              {\n                name: \"taken\",\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={500}\n                    label=\"jamia\"\n                    data={[\"jamia 1\", \"jamia 2\", \"jamia 3\"]}\n                    required={true}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              { column: \"date\", sort: true, colCode: \"createdAt\" },\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"question\", sort: false, colCode: \"ques\" },\n              { column: \"answers\", sort: true, colCode: \"ansCount\" },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/user/questions\">\n          <View\n            Element={SingleUserQuestions}\n            defaultSort={{ column: \"submitted\", order: \"des\" }}\n            id=\"userSubmissions\"\n            api=\"api/admin/userQuestion/filter?\"\n            columns={[\n              { column: \"date\", sort: true, colCode: \"submitted\" },\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"question\", sort: false, colCode: \"ques\" },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/user/answeredQuestion\">\n          <View\n            Element={SingleUserReview}\n            defaultSort={{ column: \"date\", order: \"des\" }}\n            id=\"answeredQuestion\"\n            api=\"api/admin/userReview/filter?\"\n            columns={[\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"date\", sort: true, colCode: \"date\" },\n              { column: \"message\", sort: false, colCode: \"message\" },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/user/review\">\n          <View\n            Element={SingleUserReview}\n            defaultSort={{ column: \"date\", order: \"des\" }}\n            id=\"answeredQuestion\"\n            api=\"api/admin/userReview/filter?\"\n            columns={[\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"date\", sort: true, colCode: \"date\" },\n              { column: \"message\", sort: false, colCode: \"message\" },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/user/report\">\n          <View\n            Element={SingleUserReview}\n            defaultSort={{ column: \"date\", order: \"des\" }}\n            id=\"allReports\"\n            api=\"api/admin/userReview/filter?\"\n            columns={[\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"date\", sort: true, colCode: \"date\" },\n              { column: \"message\", sort: false, colCode: \"message\" },\n            ]}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nfunction SingleUserReview() {\n  return (\n    <tr>\n      <td>Make user review rows</td>\n    </tr>\n  );\n}\nfunction SingleUserQuestions({ data, setData }) {\n  const { locale } = useContext(SiteContext);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const ques = data;\n  function remove() {\n    setLoading(true);\n    fetch(\"/api/admin/removeUserQuestion\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: ques._id }),\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => prev.filter((item) => item._id !== ques._id));\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"something went wrong!\");\n      });\n  }\n  return !open ? (\n    <tr onClick={() => setOpen(true)}>\n      <td>\n        <FormattedDate\n          value={ques.createdAt}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td>\n        {ques.user.name}\n        <span>{ques.user.add}</span>\n      </td>\n      <td>{ques.ques.body}</td>\n      <td>\n        <FormattedNumber value={ques.ansCount} />\n      </td>\n    </tr>\n  ) : (\n    <tr className=\"full\">\n      <td className=\"label\">Submitted</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={ques.createdAt}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">Name</td>\n      <td className=\"data\">{ques.user.name}</td>\n      <td className=\"label\">Address</td>\n      <td className=\"data\">{ques.user.add}</td>\n      <td className=\"label\">Mobile</td>\n      <td className=\"data\">\n        <a href={`tel:${ques.user.mob}`}>{ques.user.mob}</a>\n      </td>\n      <td className=\"label\">Topic</td>\n      <td className=\"data\">{ques.ques.topic[locale]}</td>\n      <td className=\"label\">Question</td>\n      <td className=\"data\">{ques.ques.body}</td>\n      <td className=\"data btns\">\n        <button className=\"hideDetail\" onClick={() => setOpen(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon>Hide Detail\n        </button>\n        <button disabled={loading} className=\"remove\" onClick={remove}>\n          <ion-icon name=\"trash-outline\"></ion-icon>Remove\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nfunction QuestionFeed() {\n  return (\n    <div className=\"view questionFeed\">\n      <h1 className=\"viewTitle\">\n        <FormattedMessage id=\"questionFeed\" defaultMessage=\"Question Feed\" />\n      </h1>\n      <Tabs\n        page=\"/admin/questionFeed/\"\n        tabs={[\n          {\n            label: <FormattedMessage id=\"newQuestions\" />,\n            link: \"newQuestions\",\n          },\n        ]}\n      />\n      <Switch>\n        <Route path=\"/admin/questionFeed\" exact>\n          <NewQuestions />\n        </Route>\n        <Route path=\"/admin/questionFeed/newQuestions\">\n          <NewQuestions />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nconst NewQuestions = injectIntl(({ intl }) => {\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n  const { locale } = useContext(SiteContext);\n  const [loading, setLoading] = useState(true);\n  const [sort, setSort] = useState({ column: \"createdAt\", order: \"des\" });\n  const [data, setData] = useState([]);\n  function fetchData() {\n    setLoading(true);\n    const sortOrder = encodeURL(sort);\n    const options = { headers: { \"Accept-Language\": locale }, signal: signal };\n    const url = `/api/admin/questionFeed/filter?&${sortOrder}`;\n    fetch(url, options)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        setData(data);\n      })\n      .catch((err) => {\n        console.log(err);\n        console.log(\"handle error!!\");\n      });\n    return () => abortController.abort();\n  }\n  useEffect(fetchData, [sort]);\n  if (!loading && data.length === 0) {\n    return (\n      <div className=\"noQuestion\">\n        <ion-icon name=\"file-tray-outline\"></ion-icon>\n        <p>\n          - <FormattedMessage id=\"nothingHere\" /> -\n        </p>\n      </div>\n    );\n  }\n  return (\n    <>\n      <div className=\"filters\">\n        <Combobox\n          disabled={loading}\n          defaultValue={1}\n          onChange={(option) => setSort(option.value)}\n          maxHeight={200}\n          id=\"questionFeedSort\"\n          icon=\"layers\"\n          options={[\n            {\n              label: intl.formatMessage({ id: \"newFirts\" }),\n              value: { column: \"createdAt\", order: \"des\" },\n            },\n            {\n              label: intl.formatMessage({ id: \"oldFirst\" }),\n              value: { column: \"createdAt\", order: \"asc\" },\n            },\n          ]}\n        />\n      </div>\n      <ul className=\"feed\">\n        {!loading ? (\n          data.map((item) => (\n            <SingleQuestion key={item._id} ques={item} setQues={setData} />\n          ))\n        ) : (\n          <LoadingPost />\n        )}\n      </ul>\n    </>\n  );\n});\nfunction SingleQuestion({ ques, setQues }) {\n  const { locale } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n  const container = useRef(null);\n  function remove() {\n    setLoading(true);\n    fetch(\"/api/admin/userQues\", {\n      method: \"DELETE\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ _id: ques._id }),\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setQues((prev) => prev.filter((item) => item._id !== ques._id));\n        } else {\n          alert(\"something went wrong\");\n        }\n      })\n      .catch((err) => {\n        setLoading(false);\n        console.log(err);\n        alert(\"something went wrong\");\n      });\n  }\n  return (\n    <li\n      ref={container}\n      className={`question mini`}\n      onClick={(e) => {\n        if (e.target === container.current) {\n          history.push(\"/admin/userQuestion/\" + ques._id);\n        }\n      }}\n    >\n      <div className=\"user\">\n        <p className=\"name\">{ques.user.name}</p>\n        <p className=\"date\">\n          {new Date(ques.submitted).getFullYear() !==\n          new Date().getFullYear() ? (\n            <FormattedDate\n              value={ques.createdAt}\n              day=\"numeric\"\n              month=\"long\"\n              year=\"2-digit\"\n            />\n          ) : (\n            <FormattedDate value={ques.submitted} day=\"numeric\" month=\"long\" />\n          )}\n          <span className=\"separator\" />\n          <FormattedTimeParts value={ques.submitted}>\n            {(parts) => (\n              <>\n                {parts[0].value}\n                {parts[1].value}\n                {parts[2].value}\n                <small>{parts[4].value.toLowerCase()}</small>\n              </>\n            )}\n          </FormattedTimeParts>\n        </p>\n      </div>\n      <Actions\n        icon=\"reorder-two-outline\"\n        actions={[\n          {\n            label: \"Answer now\",\n            action: () => {\n              SS.set(\"userAns-ques\", ques.ques.body);\n              SS.set(\"userAns-topic\", JSON.stringify(ques.ques.topic));\n              history.push(`/admin/userQuestion/${ques._id}/add`);\n            },\n          },\n          {\n            label: \"Remove\",\n            action: () => {\n              remove();\n            },\n          },\n        ]}\n      />\n      <p className=\"ques\">{ques.ques.body}</p>\n      <ul className=\"tags\">\n        <li className=\"tag\">{ques.ques.topic[locale]}</li>\n        <li className=\"tag\">\n          <FormattedMessage\n            values={{ number: <FormattedNumber value={ques.ans.length} /> }}\n            id=\"ans.tag.ansCount\"\n            defaultMessage={`${ques.ans.length} Answer(s)`}\n          />\n        </li>\n        <li className=\"tag\">\n          <FormattedMessage\n            values={{ number: <FormattedNumber value={ques.reports.length} /> }}\n            id=\"ans.tag.reportCount\"\n            defaultMessage={`${ques.reports.length} Reports(s)`}\n          />\n        </li>\n      </ul>\n    </li>\n  );\n}\n\nfunction UserQuestion({ history, match }) {\n  const [loading, setLoading] = useState(true);\n  const [userQues, setUserQues] = useState({});\n  useEffect(getData, []);\n  function getData() {\n    fetch(\"/api/admin/userQues/\" + match.params._id)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setUserQues(data.content);\n        } else {\n          throw data;\n        }\n      })\n      .catch((err) => {\n        alert(\"something went wrong\");\n        console.log(err);\n      });\n  }\n  if (userQues.ques) {\n    return (\n      <div className=\"view userQues\">\n        <div className=\"container\">\n          <div className=\"ques\">\n            <div className=\"user\">\n              <p className=\"name\">\n                <b>{userQues.user.name}</b>\n                <span className=\"separator\" />\n                <i>\n                  <span className=\"add\">{userQues.user.add}</span>\n                </i>\n              </p>\n              <p className=\"date\">\n                <FormattedDate\n                  value={userQues.createdAt}\n                  day=\"numeric\"\n                  month=\"long\"\n                  year=\"2-digit\"\n                />\n                <span className=\"separator\" />\n                <FormattedTimeParts value={userQues.createdAt}>\n                  {(parts) => (\n                    <>\n                      {parts[0].value}\n                      {parts[1].value}\n                      {parts[2].value}\n                      <small>{parts[4].value.toLowerCase()}</small>\n                    </>\n                  )}\n                </FormattedTimeParts>\n              </p>\n            </div>\n            <p className=\"body\">{userQues.ques.body}</p>\n          </div>\n          <Tabs\n            page={`/admin/userQuestion/${userQues._id}/`}\n            tabs={[\n              { label: \"Answers\", link: \"answers\" },\n              { label: \"Reports\", link: \"reports\" },\n              { label: \"Add answer\", link: \"addAnswer\" },\n            ]}\n          />\n          <Switch>\n            <Route path={`/admin/userQuestion/${userQues._id}`} exact>\n              {userQues.ans.map((item) => (\n                <Answer\n                  key={item._id}\n                  ques={userQues}\n                  ans={item}\n                  setQues={setUserQues}\n                />\n              ))}\n            </Route>\n            <Route path={`/admin/userQuestion/${userQues._id}/answers`}>\n              {userQues.ans.map((item) => (\n                <Answer\n                  key={item._id}\n                  ques={userQues}\n                  ans={item}\n                  setQues={setUserQues}\n                />\n              ))}\n            </Route>\n            <Route path={`/admin/UserQuestion/${userQues._id}/reports`}>\n              {userQues.reports.map((report) => (\n                <Report key={report._id} report={report} />\n              ))}\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"view\">\n      {loading ? <h1>loading</h1> : <p>Question not found!</p>}\n    </div>\n  );\n}\nfunction Answer({ ques, ans, setQues }) {\n  const { locale, user } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n  function approve() {\n    setLoading(true);\n    const options = {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ ans_id: ans._id }),\n    };\n    fetch(`/api/admin/userQues/approveAns/${ques._id}`, options)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          history.push(\"/admin/questionFeed\");\n        } else {\n          throw data.code;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"something went wrong\");\n      });\n  }\n  function edit() {\n    SS.set(\"ansFatwa-ans\", ans.body);\n    SS.set(\"ansFatwa-title\", ans.title);\n    SS.set(\"ansFatwa-ref\", JSON.stringify(ans.ref));\n    history.push(history.location.pathname + \"/add\");\n  }\n  function remove() {\n    const options = {\n      method: \"DELETE\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ source: ans.source._id, _id: ans._id }),\n    };\n    setLoading(true);\n    fetch(`/api/admin/userQues/answer/${ques._id}`, options)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setQues(data.content);\n        } else {\n          throw data.code;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"something went wrong\");\n      });\n  }\n  return (\n    <div\n      className={`ans ${ans.source._id === user._id ? \"mine\" : \"\"} ${\n        !open ? \"mini\" : \"\"\n      } ${loading ? \"loading\" : \"\"}`}\n    >\n      <div className=\"vote\">\n        <div className={`content`}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon>\n          <p className=\"voteCount\">\n            <FormattedNumber value={ans.vote.count} />\n          </p>\n          <ion-icon name=\"chevron-down-outline\"></ion-icon>\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"source\">\n          <p className=\"name\">\n            <b>{ans.source.name[locale]}</b>\n          </p>\n          <p className=\"date\">\n            <FormattedDate\n              value={ans.createdAt}\n              day=\"numeric\"\n              month=\"long\"\n              year=\"2-digit\"\n            />\n            <span className=\"separator\" />\n            <FormattedTimeParts value={ans.createdAt}>\n              {(parts) => (\n                <>\n                  {parts[0].value}\n                  {parts[1].value}\n                  {parts[2].value}\n                  <small>{parts[4].value.toLowerCase()}</small>\n                </>\n              )}\n            </FormattedTimeParts>\n          </p>\n        </div>\n        <div className=\"body\">\n          <p className=\"title\">\n            {ans.topic[locale]}: {ans.title}\n          </p>\n          <p className=\"answer\">{ans.body}</p>\n        </div>\n        {open && ans.ref.length > 0 && (\n          <div className=\"ref\">\n            <p>\n              <FormattedMessage id=\"ref\" value=\"Ref.\" />\n            </p>\n            <ul className=\"ref\">\n              {ans.ref.map((item, i) => {\n                if (item.book) {\n                  return (\n                    <li key={item.book + item.part + item.page}>\n                      <FormattedMessage id=\"book\" defaultMessage=\"Book\" />:{\" \"}\n                      {item.book},{\" \"}\n                      {item.part && (\n                        <>\n                          <FormattedMessage id=\"part\" defaultMessage=\"Part\" />:{\" \"}\n                          <FormattedNumber value={item.part} />,\n                        </>\n                      )}{\" \"}\n                      <FormattedMessage id=\"page\" defaultMessage=\"Page\" />:{\" \"}\n                      <FormattedNumber value={item.page} />\n                    </li>\n                  );\n                } else if (item.sura) {\n                  return (\n                    <li key={item.sura + item.aayat}>\n                      <FormattedMessage id=\"sura\" defaultMessage=\"Sura\" />:{\" \"}\n                      {item.sura},{\" \"}\n                      <FormattedMessage id=\"aayat\" defaultMessage=\"Aayat\" />:{\" \"}\n                      <FormattedNumber value={item.aayat} />\n                    </li>\n                  );\n                } else {\n                  return (\n                    <li key={item.hadith + item.hadithNo}>\n                      <FormattedMessage\n                        id=\"hadith\"\n                        defaultMessage=\"hadith book\"\n                      />\n                      : {item.hadith},{\" \"}\n                      <FormattedMessage\n                        id=\"hadithNo\"\n                        defaultMessage=\"Hadith No\"\n                      />\n                      : <FormattedNumber value={item.hadithNo} />\n                    </li>\n                  );\n                }\n              })}\n            </ul>\n          </div>\n        )}\n        {!open && (\n          <div className=\"tags\">\n            <p className=\"tag\">\n              <FormattedMessage\n                values={{ number: <FormattedNumber value={ans.ref.length} /> }}\n                id=\"ans.tag.refCount\"\n                defaultMessage={`${ans.ref.length} Reference(s)`}\n              />\n            </p>\n            <p className=\"tag\">\n              <FormattedMessage\n                values={{\n                  number: <FormattedNumber value={ans.vote.voters.length} />,\n                }}\n                id=\"ans.tag.voteCount\"\n                defaultMessage={`${ans.vote.voters.length} Vote(s)`}\n              />\n            </p>\n          </div>\n        )}\n        <span onClick={() => setOpen(!open)} className=\"showFull\">\n          {open ? \"পুরো উত্তর গোপন করুন\" : \"পুরো উত্তর দেখুন\"}\n        </span>\n      </div>\n      <Actions\n        icon=\"reorder-two-outline\"\n        actions={[\n          { label: \"Edit\", action: edit },\n          { label: \"Approve\", action: approve },\n          { label: \"Remove\", action: remove },\n        ]}\n      />\n    </div>\n  );\n}\nfunction Report({ report }) {\n  const { locale } = useContext(SiteContext);\n  return (\n    <div className=\"quesReports\">\n      <div className=\"user\">\n        <p className=\"name\">\n          <b>{report.source.name[locale]}</b>\n        </p>\n        <p className=\"date\">\n          <FormattedDate\n            value={report.createdAt}\n            day=\"numeric\"\n            month=\"long\"\n            year=\"2-digit\"\n          />\n          <span className=\"separator\" />\n          <FormattedTimeParts value={report.createdAt}>\n            {(parts) => (\n              <>\n                {parts[0].value}\n                {parts[1].value}\n                {parts[2].value}\n                <small>{parts[4].value.toLowerCase()}</small>\n              </>\n            )}\n          </FormattedTimeParts>\n        </p>\n      </div>\n      <div className=\"contect\">\n        <p className=\"subject\">{report.message.subject}</p>\n        <p className=\"body\">{report.message.body}</p>\n      </div>\n    </div>\n  );\n}\n\nconst ScrappedFatwas = injectIntl(({ history, location, match, intl }) => {\n  const { locale } = useContext(SiteContext);\n  return (\n    <div className=\"view\">\n      <h1 className=\"viewTitle\">\n        <FormattedMessage id=\"scrapped\" defaultMessage=\"Scrapped\" />\n      </h1>\n      <Tabs\n        page=\"/admin/scrappedFatwas/\"\n        tabs={[\n          {\n            label: <FormattedMessage id=\"pending\" defaultMessage=\"pending\" />,\n            link: \"pending\",\n          },\n          {\n            label: <FormattedMessage id=\"live\" defaultMessage=\"Live\" />,\n            link: \"live\",\n          },\n        ]}\n      />\n      <Switch>\n        <Route path=\"/admin/scrappedFatwas\" exact>\n          <View\n            key=\"allFatwaSubmission\"\n            Element={SingleScrappedFatwa}\n            id=\"allScrapped\"\n            api=\"api/admin/scrappedFatwas/filter?\"\n            categories={[\n              {\n                default: true,\n                fieldName: \"title\",\n                name: intl.formatMessage({\n                  id: \"title\",\n                  defaultMessage: \"Title\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"titleChip\",\n                  defaultMessage: \"Title contains:\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"titleChip\"\n                      defaultMessage=\"Title contains:\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"topic\",\n                name: intl.formatMessage({\n                  id: \"topic\",\n                  defaultMessage: \"Topic\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"topicChip\",\n                  defaultMessage: \"Topic is\",\n                }),\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={300}\n                    label=<FormattedMessage\n                      id=\"topicChip\"\n                      defaultMessage=\"topic is\"\n                    />\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ques\",\n                name: intl.formatMessage({\n                  id: \"question\",\n                  defaultMessage: \"Question\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"quesChip\",\n                  defaultMessage: \"Question contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"quesChip\"\n                      defaultMessage=\"Question contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ans\",\n                name: intl.formatMessage({\n                  id: \"answer\",\n                  defaultMessage: \"Answer\",\n                }),\n                display: intl.formatMessage({\n                  id: \"ansChip\",\n                  defaultMessage: \"Answer contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"ansChip\"\n                      defaultMessage=\"Answer contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"translation\",\n                name: intl.formatMessage({\n                  id: \"translation\",\n                  defaultMessage: \"Translation\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"translationChip\",\n                  defaultMessage: \"Translation:\",\n                }),\n                input: (\n                  <Combobox\n                    maxHeight={500}\n                    label=<FormattedMessage\n                      id=\"translation\"\n                      defaultMessage=\"Translation:\"\n                    />\n                    options={[\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationAuto\",\n                          defaultMessage: \"Auto\",\n                        }),\n                        value: \"generated\",\n                      },\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationManual\",\n                          defaultMessage: \"Manual\",\n                        }),\n                        value: \"manual\",\n                      },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"jamia\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n        <Route path=\"/admin/scrappedFatwas/pending\">\n          <View\n            key=\"allFatwaSubmission\"\n            Element={SingleScrappedFatwa}\n            id=\"allScrapped\"\n            api=\"api/admin/scrappedFatwas/filter?\"\n            categories={[\n              {\n                default: true,\n                fieldName: \"title\",\n                name: intl.formatMessage({\n                  id: \"title\",\n                  defaultMessage: \"Title\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"titleChip\",\n                  defaultMessage: \"Title contains:\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"titleChip\"\n                      defaultMessage=\"Title contains:\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"topic\",\n                name: intl.formatMessage({\n                  id: \"topic\",\n                  defaultMessage: \"Topic\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"topicChip\",\n                  defaultMessage: \"Topic is\",\n                }),\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={300}\n                    label=<FormattedMessage\n                      id=\"topicChip\"\n                      defaultMessage=\"topic is\"\n                    />\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ques\",\n                name: intl.formatMessage({\n                  id: \"question\",\n                  defaultMessage: \"Question\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"quesChip\",\n                  defaultMessage: \"Question contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"quesChip\"\n                      defaultMessage=\"Question contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ans\",\n                name: intl.formatMessage({\n                  id: \"answer\",\n                  defaultMessage: \"Answer\",\n                }),\n                display: intl.formatMessage({\n                  id: \"ansChip\",\n                  defaultMessage: \"Answer contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"ansChip\"\n                      defaultMessage=\"Answer contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"translation\",\n                name: intl.formatMessage({\n                  id: \"translation\",\n                  defaultMessage: \"Translation\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"translationChip\",\n                  defaultMessage: \"Translation:\",\n                }),\n                input: (\n                  <Combobox\n                    maxHeight={500}\n                    label=<FormattedMessage\n                      id=\"translation\"\n                      defaultMessage=\"Translation:\"\n                    />\n                    options={[\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationAuto\",\n                          defaultMessage: \"Auto\",\n                        }),\n                        value: \"generated\",\n                      },\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationManual\",\n                          defaultMessage: \"Manual\",\n                        }),\n                        value: \"manual\",\n                      },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"jamia\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n        <Route path=\"/admin/scrappedFatwas/live\">\n          <View\n            key=\"allFatwa\"\n            Element={SingleScrappedFatwa}\n            id=\"allScrappedLive\"\n            api=\"api/admin/scrappedFatwas/live/filter?\"\n            categories={[\n              {\n                default: true,\n                fieldName: \"title\",\n                name: intl.formatMessage({\n                  id: \"title\",\n                  defaultMessage: \"Title\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"titleChip\",\n                  defaultMessage: \"Title contains:\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"titleChip\"\n                      defaultMessage=\"Title contains:\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"topic\",\n                name: intl.formatMessage({\n                  id: \"topic\",\n                  defaultMessage: \"Topic\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"topicChip\",\n                  defaultMessage: \"Topic is\",\n                }),\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={300}\n                    label=<FormattedMessage\n                      id=\"topicChip\"\n                      defaultMessage=\"topic is\"\n                    />\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ques\",\n                name: intl.formatMessage({\n                  id: \"question\",\n                  defaultMessage: \"Question\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"quesChip\",\n                  defaultMessage: \"Question contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"quesChip\"\n                      defaultMessage=\"Question contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"ans\",\n                name: intl.formatMessage({\n                  id: \"answer\",\n                  defaultMessage: \"Answer\",\n                }),\n                display: intl.formatMessage({\n                  id: \"ansChip\",\n                  defaultMessage: \"Answer contains\",\n                }),\n                input: (\n                  <Input\n                    autoFocus={true}\n                    label=<FormattedMessage\n                      id=\"ansChip\"\n                      defaultMessage=\"Answer contains\"\n                    />\n                    required={true}\n                  />\n                ),\n              },\n              {\n                fieldName: \"translation\",\n                name: intl.formatMessage({\n                  id: \"translation\",\n                  defaultMessage: \"Translation\",\n                }),\n                chip: intl.formatMessage({\n                  id: \"translationChip\",\n                  defaultMessage: \"Translation:\",\n                }),\n                input: (\n                  <Combobox\n                    maxHeight={500}\n                    label=<FormattedMessage\n                      id=\"translation\"\n                      defaultMessage=\"Translation:\"\n                    />\n                    options={[\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationAuto\",\n                          defaultMessage: \"Auto\",\n                        }),\n                        value: \"generated\",\n                      },\n                      {\n                        label: intl.formatMessage({\n                          id: \"translationManual\",\n                          defaultMessage: \"Manual\",\n                        }),\n                        value: \"manual\",\n                      },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"jamia\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n});\nfunction SingleScrappedFatwa({ data, setData }) {\n  const [showForm, setShowForm] = useState(false);\n  const { locale } = useContext(SiteContext);\n  function fetchData() {\n    fetch(\"/api/admin/scrappedFatwas/filter?\")\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.code === \"ok\") {\n          setData(data.data);\n        } else {\n          alert(\"someting went wrong\");\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"someting went wrong\");\n      });\n  }\n  return (\n    <>\n      <tr\n        onClick={() => {\n          setShowForm(true);\n        }}\n      >\n        <td>\n          <FormattedDate\n            value={data.createdAt}\n            day=\"numeric\"\n            month=\"numeric\"\n            year=\"2-digit\"\n          />\n        </td>\n        <td>{data.topic || \"NA\"}</td>\n        <td>{data.source?.name[locale] || \"NA\"}</td>\n        <td>{data.title || data.ques}</td>\n      </tr>\n      <Modal\n        containerClass=\"scrappedFawtaForm\"\n        open={showForm}\n        setOpen={setShowForm}\n      >\n        <ion-icon\n          onClick={() => setShowForm(false)}\n          name=\"close-outline\"\n        ></ion-icon>\n        <ScrappedFawtaForm data={data} fetchData={fetchData} />\n      </Modal>\n    </>\n  );\n}\n\nfunction AdminPanel() {\n  const { user, setSidebarSize } = useContext(SiteContext);\n  if (!user || !(user.role === \"admin\")) return <Redirect to=\"/\" />;\n  return (\n    <div className=\"main adminPanel\">\n      <Sidebar\n        views={[\n          {\n            label: (\n              <FormattedMessage id=\"newFatwa\" defaultMessage=\"New Fatwa\" />\n            ),\n            path: \"/admin/newFatwa\",\n            icon: \"add\",\n          },\n          {\n            label: <FormattedMessage id=\"source\" defaultMessage=\"Source\" />,\n            path: \"/admin/sources\",\n            icon: \"book\",\n          },\n          {\n            label: <FormattedMessage id=\"fatwa\" defaultMessage=\"Fatwa\" />,\n            path: \"/admin/fatwa\",\n            icon: \"reader\",\n          },\n          {\n            label: <FormattedMessage id=\"scrapped\" defaultMessage=\"Scrapped\" />,\n            path: \"/admin/scrappedFatwas\",\n            icon: \"download\",\n          },\n          // {\n          //   label: (\n          //     <FormattedMessage id=\"userArea\" defaultMessage=\"User Area\" />\n          //   ),\n          //   path: \"/admin/user\",\n          //   icon: \"people\",\n          // },\n          // {\n          //   label: <FormattedMessage id=\"patreons\" defaultMessage=\"Patreons\" />,\n          //   path: \"/admin/patreons\",\n          //   icon: \"umbrella\",\n          // },\n          {\n            label: (\n              <FormattedMessage\n                id=\"questionFeed\"\n                defaultMessage=\"Question Feed\"\n              />\n            ),\n            path: \"/admin/questionFeed\",\n            icon: \"mail\",\n          },\n        ]}\n      >\n        <div className=\"profile\">\n          <h2\n            onClick={() => {\n              if (window.innerWidth < 1080) {\n                setSidebarSize(\"mini\");\n              }\n            }}\n          >\n            A\n          </h2>\n        </div>\n      </Sidebar>\n      <Switch>\n        <Route path=\"/admin\" exact component={AllSources} />\n        <Route path=\"/admin/sources\" component={AllSources} />\n        <Route path=\"/admin/fatwa/:filter?\" component={AllFatwa} />\n        <Route path=\"/admin/patreons\" component={Patreons} />\n        <Route path=\"/admin/user\" component={UserReview} />\n        <Route path=\"/admin/scrappedFatwas\" component={ScrappedFatwas} />\n        <Route\n          path=\"/admin/newFatwa\"\n          component={(props) => (\n            <div className=\"view\" id=\"addFatwa\">\n              <h1>\n                <FormattedMessage\n                  id=\"addNewFatwa\"\n                  defaultMessage=\"Add new Fatwa\"\n                />\n              </h1>\n              <AddFatwaForm {...props} />\n            </div>\n          )}\n        />\n        <Route\n          path=\"/admin/editFatwa/:id\"\n          component={(props) => (\n            <div className=\"view\" id=\"addFatwa\">\n              <h1>\n                <FormattedMessage id=\"editFatwa\" defaultMessage=\"Edit Fatwa\" />\n              </h1>\n              <AddFatwaForm {...props} />\n            </div>\n          )}\n        />\n        <Route path=\"/admin/userQuestion/:_id\" component={UserQuestion} />\n        <Route path=\"/admin/questionFeed\" component={QuestionFeed} />\n        <Route path=\"/\" component={FourOFour} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default AdminPanel;\n"],"sourceRoot":""}