[{"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\index.js":"1","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\App.js":"2","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\Context.js":"3","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\LandingPage.js":"4","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Fatwa.js":"5","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Nav.js":"6","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Footer.js":"7","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\About.js":"8","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\SearchResult.js":"9","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\FourOFour.js":"10","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\UserSubmitions.js":"11","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\JamiaProfile.js":"12","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Forms.js":"13","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\AdminPanel.js":"14","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Searchbar.js":"15","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Modals.js":"16","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\FormElements.js":"17","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\TableElements.js":"18"},{"size":597,"mtime":1601755664553,"results":"19","hashOfConfig":"20"},{"size":4341,"mtime":1608561657029,"results":"21","hashOfConfig":"20"},{"size":946,"mtime":1608648530393,"results":"22","hashOfConfig":"20"},{"size":1199,"mtime":1608657089308,"results":"23","hashOfConfig":"20"},{"size":5423,"mtime":1608322458598,"results":"24","hashOfConfig":"20"},{"size":4136,"mtime":1608367052211,"results":"25","hashOfConfig":"20"},{"size":1379,"mtime":1608279942836,"results":"26","hashOfConfig":"20"},{"size":405,"mtime":1601012712794,"results":"27","hashOfConfig":"20"},{"size":6196,"mtime":1608636178199,"results":"28","hashOfConfig":"20"},{"size":255,"mtime":1600541675706,"results":"29","hashOfConfig":"20"},{"size":5445,"mtime":1608321827660,"results":"30","hashOfConfig":"20"},{"size":37827,"mtime":1608641335317,"results":"31","hashOfConfig":"20"},{"size":59181,"mtime":1608639905762,"results":"32","hashOfConfig":"20"},{"size":57789,"mtime":1608313971570,"results":"33","hashOfConfig":"20"},{"size":7389,"mtime":1608658917999,"results":"34","hashOfConfig":"20"},{"size":647,"mtime":1608310457675,"results":"35","hashOfConfig":"20"},{"size":27648,"mtime":1608633112366,"results":"36","hashOfConfig":"20"},{"size":13382,"mtime":1608654135777,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1jm15ld",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":45,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\index.js",[],["79","80"],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\App.js",["81","82","83"],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\Context.js",[],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\LandingPage.js",[],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Fatwa.js",["84","85"],"import React, { useEffect, Fragment, useState, useContext } from \"react\";\nimport { Route, Link, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../Context\";\nimport \"./CSS/Fatwa.min.css\";\nimport { FormattedNumber, FormattedMessage } from \"react-intl\";\nimport { Modal } from \"./Modals\";\nimport { Helmet } from \"react-helmet\";\nimport { Report } from \"./Forms\";\n\nfunction Loading() {\n  return (\n    <>\n      <div className=\"h1\" />\n      <div className=\"ques\" />\n      <div className=\"ans\" />\n    </>\n  );\n}\n\nfunction Fatwa({ match }) {\n  const { locale } = useContext(SiteContext);\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [fatwa, setFatwa] = useState({});\n  const fixUrlOnLocaleChange = () =>\n    fatwa.link && history.push(`/fatwa/${fatwa.link[locale]}`);\n  useEffect(fixUrlOnLocaleChange, [locale]);\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n  const options = { headers: { \"Accept-Language\": locale }, signal: signal };\n  const closeModal = () => {\n    history.push(`/fatwa/${fatwa.link[locale]}`);\n  };\n  const fetchData = () => {\n    fetch(`/api/fatwa/${match.params.id}`, options)\n      .then((res) => {\n        setLoading(false);\n        return res.json();\n      })\n      .then((data) => {\n        setFatwa(data);\n      })\n      .catch((err) => console.log(err));\n    return () => abortController.abort();\n  };\n  useEffect(fetchData, [match]);\n  return (\n    <div className={`main fatwa ${loading ? \"loading\" : \"\"}`}>\n      <Helmet>\n        <meta charSet=\"utf-8\" />\n        <title>{fatwa.title && fatwa.title[locale]}</title>\n        <meta\n          name=\"description\"\n          content={fatwa.ans && fatwa.ans[locale].substring(200)}\n        />\n      </Helmet>\n      {loading ? (\n        <Loading />\n      ) : fatwa.title ? (\n        <>\n          <h1>{fatwa.title[locale]}</h1>\n          <h4 className=\"jamia\">\n            {fatwa.source.name[locale]}\n            <br />\n            <span>Mohammadpur, Dhaka, Bangladesh</span>\n          </h4>\n          <br />\n          <br />\n          <h3>\n            <span className=\"hr\" />\n            <span className=\"content\">\n              <FormattedMessage id=\"question\" defaultMessage=\"Question\" />\n            </span>\n            <span className=\"hr\" />\n          </h3>\n          <br />\n          {fatwa.ques[locale].split(\"\\n\").map((para, i) => {\n            return (\n              <Fragment key={i}>\n                <p className=\"ques\">{para}</p>\n                <br />\n              </Fragment>\n            );\n          })}\n          <br />\n          <h3>\n            <span className=\"hr\" />\n            <span className=\"content\">\n              <FormattedMessage id=\"answer\" defaultMessage=\"Answer\" />\n            </span>\n            <span className=\"hr\" />\n          </h3>\n          <br />\n          {fatwa.ans[locale].split(\"\\n\").map((para, i) => {\n            return (\n              <Fragment key={i}>\n                <p className=\"ans\">{para}</p>\n                <br />\n              </Fragment>\n            );\n          })}\n          <br />\n          {locale === \"en-US\" && (\n            <>\n              <p className=\"dis\">\n                * This Fatwa was translated by Google Translate.\n                <br /> To see the original{\" \"}\n                <Link\n                  target=\"_blank\"\n                  to={`/fatwa/${fatwa.link && fatwa.link[\"bn-BD\"]}`}\n                >\n                  click here\n                </Link>\n              </p>\n              <br />\n            </>\n          )}\n          <br />\n          <br />\n          <h3 className=\"sub\">\n            <FormattedMessage id=\"ref\" value=\"Ref.\" />\n          </h3>\n          <br />\n          {fatwa.ref.length > 0 && (\n            <ul className=\"ref\">\n              {fatwa.ref.map((ref, i) =>\n                ref.book ? (\n                  <li key={i}>\n                    <span>{ref.book}</span>,{\" \"}\n                    <FormattedMessage id=\"page\" defaultMessage=\"Page\" />{\" \"}\n                    <span>\n                      <FormattedNumber value={ref.part} />\n                    </span>\n                    , <FormattedMessage id=\"part\" defaultMessage=\"Part\" />{\" \"}\n                    <span>\n                      <FormattedNumber value={ref.page} />\n                    </span>\n                  </li>\n                ) : (\n                  <li key={i}>\n                    <span>{ref.sura}</span>,{\" \"}\n                    <FormattedMessage id=\"aayat\" defaultMessage=\"Aayat\" />{\" \"}\n                    <span>\n                      <FormattedNumber value={ref.aayat} />\n                    </span>\n                  </li>\n                )\n              )}\n            </ul>\n          )}\n          <br />\n          <br />\n          <br />\n          <button\n            className=\"cla\"\n            onClick={() => history.push(`${history.location.pathname}/report`)}\n          >\n            <FormattedMessage id=\"report\" defaultMessage=\"Report\" />\n          </button>\n          <br />\n          <br />\n          <br />\n        </>\n      ) : (\n        <>Fatwa did not found.</>\n      )}\n      <Route path={`/fatwa/${fatwa.link ? fatwa.link[locale] : \"link\"}/report`}>\n        {\n          <Modal open={true} setOpen={closeModal}>\n            <Report fatwa={fatwa} close={closeModal} />\n          </Modal>\n        }\n      </Route>\n    </div>\n  );\n}\n\nexport default Fatwa;\n","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Nav.js",["86"],"import React, { useEffect, useState, useContext } from \"react\";\nimport { Link, Route, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../Context\";\nimport { OutsideClick } from \"./TableElements\";\nimport \"./CSS/Nav.min.css\";\nimport Searchbar from \"./Searchbar\";\nimport logo from \"../logo.svg\";\nimport { FormattedMessage } from \"react-intl\";\n\nfunction Avatar() {\n  const { locale, user, setUser, setIsAuthenticated } = useContext(SiteContext);\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n  function logout() {\n    fetch(\"/api/logout\")\n      .then((res) => res.json())\n      .then((data) => {\n        setUser(data.user);\n        setIsAuthenticated(data.isAuthenticated);\n        history.push(\"/\");\n      });\n  }\n  return (\n    <li className=\"avatar\" onClick={() => setOpen(true)}>\n      {user.role === \"jamia\" && user.name[locale].slice(0, 1)}\n      {user.role === \"admin\" && user.firstName.slice(0, 1)}\n      {open && (\n        <OutsideClick open={open} setOpen={setOpen}>\n          <ul\n            className=\"avatarOptions\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setOpen(false);\n            }}\n          >\n            <li>\n              <Link to={`/${user.role}/fatwa`}>\n                <FormattedMessage id=\"dashboard\" defaultMessage=\"Dashboard\" />\n              </Link>\n            </li>\n            <li onClick={logout}>\n              <a>\n                <FormattedMessage id=\"logout\" defaultMessage=\"logout\" />\n              </a>\n            </li>\n          </ul>\n        </OutsideClick>\n      )}\n    </li>\n  );\n}\n\nfunction Nav({ location }) {\n  const history = useHistory();\n  const { sidebarSize, setSidebarSize } = useContext(SiteContext);\n  const [style, setStyle] = useState({ boxShadow: \"none\" });\n  const [showSearchbar, setShowSearchbar] = useState(true);\n  const { user } = useContext(SiteContext);\n  useEffect(() => {\n    if (\n      location.pathname.startsWith(\"/moblieSearch\") ||\n      location.pathname.startsWith(\"/about\") ||\n      location.pathname.startsWith(\"/jamia\") ||\n      location.pathname.startsWith(\"/admin\") ||\n      location.pathname.startsWith(\"/login\") ||\n      location.pathname.startsWith(\"/register\") ||\n      location.pathname.startsWith(\"/passwordRecovery\")\n    ) {\n      setShowSearchbar(false);\n    } else {\n      setShowSearchbar(true);\n    }\n    if (location.pathname === \"/\") {\n      setStyle({ boxShadow: \"none\" });\n    } else {\n      setStyle({ boxShadow: \"0 5px 5px rgba(0,0,0,0.05)\" });\n    }\n  }, [location, showSearchbar]);\n  function toggleSidebar() {\n    sidebarSize === \"full\" ? setSidebarSize(\"mini\") : setSidebarSize(\"full\");\n  }\n  return (\n    <div style={style} className={`navbar ${!showSearchbar ? \"mini\" : \"\"}`}>\n      <Route\n        path=\"/admin\"\n        render={() => (\n          <div className=\"sidebarToggleBtn\">\n            <ion-icon onClick={toggleSidebar} name=\"menu-outline\"></ion-icon>\n          </div>\n        )}\n      />\n      <Route\n        path=\"/jamia\"\n        render={() => (\n          <div className=\"sidebarToggleBtn\">\n            <ion-icon onClick={toggleSidebar} name=\"menu-outline\"></ion-icon>\n          </div>\n        )}\n      />\n      <Route path=\"/:other\">\n        <Link className=\"navLogo\" to=\"/\">\n          <img src={logo} alt=\"Fatwa Archive logo\" />\n        </Link>\n        {showSearchbar && <Searchbar key=\"navSearch\" />}\n      </Route>\n      <nav>\n        <ul>\n          {user ? (\n            <Avatar />\n          ) : (\n            <>\n              {!(history.location.pathname === \"/login\") && (\n                <li>\n                  <Link to=\"/login\">\n                    <FormattedMessage id=\"login\" defaultMessage=\"Login\" />\n                  </Link>\n                </li>\n              )}\n              {!(history.location.pathname === \"/register\") && (\n                <li>\n                  <Link to=\"/register\">\n                    <FormattedMessage id=\"register\" defaultMessage=\"Register\" />\n                  </Link>\n                </li>\n              )}\n            </>\n          )}\n        </ul>\n      </nav>\n    </div>\n  );\n}\n\nexport default Nav;\n","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Footer.js",["87","88"],"import React, { useContext } from \"react\";\nimport { FormattedMessage } from \"react-intl\";\nimport \"./CSS/Footer.min.css\";\nimport { SiteContext } from \"../Context\";\nimport { Link } from \"react-router-dom\";\n\nfunction Footer() {\n  const { user, locale, setLocale } = useContext(SiteContext);\n  return (\n    <div className=\"footer\">\n      <ul className=\"links\">\n        <li>\n          <Link to=\"/about\">\n            <FormattedMessage id=\"about\" defaultMessage=\"About\" />\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/askQuestion\">\n            <FormattedMessage id=\"askFatwa\" defaultMessage=\"Ask Fatwa\" />\n          </Link>\n        </li>\n        {user === null && (\n          <li>\n            <Link to=\"/admin\">\n              <FormattedMessage id=\"admin\" defaultMessage=\"Admin\" />\n            </Link>\n          </li>\n        )}\n        <li\n          onClick={() => {\n            locale === \"bn-BD\" ? setLocale(\"en-US\") : setLocale(\"bn-BD\");\n          }}\n        >\n          {locale === \"en-US\" ? <a>বাং</a> : <a>EN</a>}\n        </li>\n      </ul>\n      <ul>\n        <li className=\"copy\">&copy; Fatwa Archive</li>\n      </ul>\n    </div>\n  );\n}\n\nexport default Footer;\n\n// <li>\n// <Link to=\"/desclaimer\">Desclaimer</Link>\n// </li>\n// <li>\n// <Link to=\"/contact\">Contact</Link>\n// </li>\n// <li>\n// <Link to=\"/table_of_content\">Table of content</Link>\n// </li>\n//\n","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\About.js",[],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\SearchResult.js",["89","90","91","92","93"],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\FourOFour.js",[],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\UserSubmitions.js",[],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\JamiaProfile.js",["94","95"],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Forms.js",["96","97","98","99","100","101","102","103"],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\AdminPanel.js",["104","105"],"import React, { useState, useContext, useRef, useEffect } from \"react\";\nimport { Link, Route, Switch, useHistory } from \"react-router-dom\";\nimport { SiteContext } from \"../Context.js\";\nimport \"./CSS/AdminPanel.min.css\";\nimport {\n  Input,\n  Textarea,\n  Combobox,\n  topics,\n  Submit,\n  ID,\n  SS,\n} from \"./FormElements\";\nimport { DataEditForm, PasswordEditForm } from \"./Forms\";\nimport { Tabs, Sidebar, View, Actions, LoadingPost } from \"./TableElements\";\nimport {\n  FormattedDate,\n  FormattedNumber,\n  FormattedMessage,\n  FormattedTimeParts,\n} from \"react-intl\";\nimport FourOFour from \"./FourOFour\";\n\nconst encodeURL = (obj) =>\n  Object.keys(obj)\n    .map((key) => `${key}=${obj[key]}`)\n    .join(\"&\");\n\nfunction AllSources() {\n  return (\n    <div className=\"view\">\n      <h1 className=\"viewTitle\">\n        <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n      </h1>\n      <Tabs\n        page=\"/admin/sources/\"\n        tabs={[\n          {\n            label: <FormattedMessage id=\"active\" defaultMessage=\"Active\" />,\n            link: \"active\",\n          },\n          {\n            label: <FormattedMessage id=\"pending\" defaultMessage=\"Pending\" />,\n            link: \"Submissions\",\n          },\n        ]}\n      />\n      <Switch>\n        <Route path=\"/admin/sources\" exact>\n          <View\n            key=\"allJamia\"\n            Element={SingleJamia}\n            defaultSort={{ column: \"joined\", order: \"des\" }}\n            id=\"allJamia\"\n            api=\"api/admin/sources/active/filter?\"\n            categories={[\n              {\n                name: \"role\",\n                bridge: \"is\",\n                input: (\n                  <Combobox\n                    label=<FormattedMessage id=\"type\" defaultMessage=\"Type\" />\n                    options={[\n                      { label: \"Jamia\", value: \"jamia\" },\n                      { label: \"Mufti\", value: \"mufti\" },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"id\" defaultMessage=\"Id\" />,\n                sort: false,\n                colCode: \"id\",\n              },\n              {\n                column: <FormattedMessage id=\"type\" defaultMessage=\"Type\" />,\n                sort: true,\n                colCode: \"role\",\n              },\n              {\n                column: <FormattedMessage id=\"name\" defaultMessage=\"Name\" />,\n                sort: false,\n                colCode: \"name\",\n              },\n              {\n                column: (\n                  <FormattedMessage\n                    id=\"primeMufti\"\n                    defaultMessage=\"Prime Mufti\"\n                  />\n                ),\n                sort: false,\n                colCode: \"primeMufti\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"joined\" defaultMessage=\"Joined\" />\n                ),\n                sort: true,\n                colCode: \"joined\",\n              },\n              {\n                column: <FormattedMessage id=\"fatwa\" defaultMessage=\"Fatwa\" />,\n                sort: true,\n                colCode: \"fatwa\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"contact\" defaultMessage=\"Contact\" />\n                ),\n                sort: false,\n                colCode: \"contact\",\n              },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/sources/active\">\n          <View\n            key=\"allJamia\"\n            Element={SingleJamia}\n            defaultSort={{ column: \"joined\", order: \"des\" }}\n            id=\"allJamia\"\n            api=\"api/admin/sources/active/filter?\"\n            categories={[\n              {\n                name: \"role\",\n                bridge: \"is\",\n                input: (\n                  <Combobox\n                    label=<FormattedMessage id=\"type\" defaultMessage=\"Type\" />\n                    options={[\n                      { label: \"Jamia\", value: \"jamia\" },\n                      { label: \"Mufti\", value: \"mufti\" },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"id\" defaultMessage=\"Id\" />,\n                sort: false,\n                colCode: \"id\",\n              },\n              {\n                column: <FormattedMessage id=\"type\" defaultMessage=\"Type\" />,\n                sort: true,\n                colCode: \"role\",\n              },\n              {\n                column: <FormattedMessage id=\"name\" defaultMessage=\"Name\" />,\n                sort: false,\n                colCode: \"name\",\n              },\n              {\n                column: (\n                  <FormattedMessage\n                    id=\"primeMufti\"\n                    defaultMessage=\"Prime Mufti\"\n                  />\n                ),\n                sort: false,\n                colCode: \"primeMufti\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"joined\" defaultMessage=\"Joined\" />\n                ),\n                sort: true,\n                colCode: \"joined\",\n              },\n              {\n                column: <FormattedMessage id=\"fatwa\" defaultMessage=\"Fatwa\" />,\n                sort: true,\n                colCode: \"fatwa\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"contact\" defaultMessage=\"Contact\" />\n                ),\n                sort: false,\n                colCode: \"contact\",\n              },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/sources/submissions\">\n          <View\n            key=\"allSourceSubmissions\"\n            Element={SingleSourceSubmission}\n            defaultSort={{ column: \"joined\", order: \"des\" }}\n            id=\"jamiaSubmissions\"\n            api=\"api/admin/sources/submissions/filter?\"\n            categories={[\n              {\n                name: \"role\",\n                input: (\n                  <Combobox\n                    label=<FormattedMessage id=\"type\" defaultMessage=\"Type\" />\n                    options={[\n                      { label: \"jamia\", value: \"jamia\" },\n                      { label: \"mufti\", value: \"mufti\" },\n                    ]}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"joined\",\n              },\n              {\n                column: <FormattedMessage id=\"name\" defaultMessage=\"Name\" />,\n                sort: false,\n                colCode: \"name\",\n              },\n              {\n                column: <FormattedMessage id=\"type\" defaultMessage=\"Type\" />,\n                sort: true,\n                colCode: \"role\",\n              },\n              {\n                column: (\n                  <FormattedMessage\n                    id=\"primeMufti\"\n                    defaultMessage=\"primeMufti\"\n                  />\n                ),\n                sort: false,\n                colCode: \"primeMufti\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"contact\" defaultMessage=\"Contact\" />\n                ),\n                sort: false,\n                colCode: \"contact\",\n              },\n            ]}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nfunction SingleSourceSubmission({ data, setData }) {\n  const jamia = data;\n  const { locale } = useContext(SiteContext);\n  const [showFull, setShowFull] = useState(false);\n  const [loading, setLoading] = useState(false);\n  function accept() {\n    setLoading(true);\n    fetch(`/api/admin/source/accept`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: jamia._id }),\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => {\n            return prev.filter((submissions) => submissions._id !== jamia._id);\n          });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n  function reject() {\n    setLoading(true);\n    fetch(`/api/admin/source/reject`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: jamia._id }),\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => {\n            return prev.filter((submissions) => submissions._id !== jamia._id);\n          });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n  return !showFull ? (\n    <tr onClick={() => (showFull ? setShowFull(false) : setShowFull(true))}>\n      <td>\n        <FormattedDate\n          value={new Date(jamia.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td>\n        {jamia.name[locale]}\n        <span>{jamia.address}</span>\n      </td>\n      <td>{jamia.role}</td>\n      <td>{jamia.primeMufti[locale]}</td>\n      <td>\n        <a href={`tel:${jamia.contact}`}>{jamia.contact.replace(\"+88\", \"\")}</a>\n      </td>\n    </tr>\n  ) : (\n    <tr className=\"full\">\n      <td className=\"label\">Submitted</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(jamia.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">ID</td>\n      <td className=\"data\">{jamia.id}</td>\n      <td className=\"label\">Name</td>\n      <td className=\"data\">{jamia.name[locale]}</td>\n      <td className=\"label\">Prime Mufti</td>\n      <td className=\"data\">{jamia.primeMufti[locale]}</td>\n      <td className=\"label\">Address</td>\n      <td className=\"data\">{jamia.address}</td>\n      <td className=\"label\">Contact</td>\n      <td className=\"data\">\n        <a href={`tel:${jamia.contact}`}>{jamia.contact.replace(\"+88\", \"\")}</a>\n      </td>\n      <td className=\"label\">Applicant's Name</td>\n      <td className=\"data\">{jamia.appl.name}</td>\n      <td className=\"label\">Applicant's designation</td>\n      <td className=\"data\">{jamia.appl.designation}</td>\n      <td className=\"label\">Applicant's mobile</td>\n      <td className=\"data\">\n        <a href={`tel:${jamia.appl.mob}`}>\n          {jamia.appl.mob.replace(\"+88\", \"\")}\n        </a>\n      </td>\n      <td className=\"data btns\">\n        <Submit\n          loading={loading}\n          onClick={accept}\n          label={\n            <>\n              <ion-icon name=\"checkmark-outline\"></ion-icon> Accept\n            </>\n          }\n        />\n        <Submit\n          loading={loading}\n          onClick={reject}\n          label={\n            <>\n              <ion-icon name=\"close-outline\"></ion-icon> Reject\n            </>\n          }\n        />\n      </td>\n    </tr>\n  );\n}\nfunction SingleJamia({ data, setData }) {\n  const jamia = data;\n  const { locale } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [showFull, setShowFull] = useState(false);\n  function ghost(_id) {\n    console.log(_id);\n  }\n  function remove() {\n    setLoading(true);\n    if (window.confirm(\"You want to delete this jamia\")) {\n      fetch(`/api/admin/source/`, {\n        method: \"DELETE\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ _id: jamia._id }),\n      })\n        .then((res) => {\n          setLoading(false);\n          if (res.status === 200) {\n            setData((prev) => {\n              return prev.filter((item) => item._id !== jamia._id);\n            });\n          } else {\n            alert(\"something went wrong\");\n          }\n        })\n        .catch((err) => {\n          console.log(err);\n          alert(\"something went wrong\");\n        });\n    }\n  }\n  const patchApi = `/api/admin/jamia/edit/${jamia._id}`;\n  return !showFull ? (\n    <tr onClick={() => setShowFull(true)}>\n      <td className=\"jamiaId\">{jamia.id}</td>\n      <td className=\"jamiaType\">{jamia.role}</td>\n      <td className=\"jamiaName\">\n        {jamia.name[locale]}\n        <span>{jamia.address}</span>\n      </td>\n      <td className=\"jamiaPrimeMufti\">{jamia.primeMufti[locale]}</td>\n      <td className=\"jamiaJoined\">\n        <FormattedDate\n          value={new Date(jamia.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"jamiaFatwaCount\">\n        <FormattedNumber value={new Date(jamia.fatwa)} />\n      </td>\n      <td className=\"jamiaContact\">\n        <a title=\"Call Jamia\" href={`tel:${jamia.contact}`}>\n          {jamia.contact.replace(\"+88\", \"\")}\n        </a>\n      </td>\n    </tr>\n  ) : (\n    <tr className=\"full\">\n      <td className=\"label\">Joined</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(jamia.joined)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">Fatwa</td>\n      <td className=\"data\">\n        <FormattedNumber value={jamia.fatwa} />\n      </td>\n      <td className=\"label\">ID</td>\n      <td className=\"data\">{jamia.id}</td>\n      <td className=\"label\">Password</td>\n      <td className=\"data\">\n        <PasswordEditForm api={patchApi} />\n      </td>\n      <td className=\"label\">Name (Bangla)</td>\n      <td className=\"data\">\n        <DataEditForm\n          api={patchApi}\n          defaultValue={jamia.name[\"bn-BD\"]}\n          Element={Input}\n          pattern={/^[ঀ-৾\\s(),]+$/}\n          fieldCode=\"name.bn-BD\"\n        />\n      </td>\n      <td className=\"label\">Name (Enlish)</td>\n      <td className=\"data\">\n        <DataEditForm\n          api={patchApi}\n          defaultValue={jamia.name[\"en-US\"]}\n          Element={Input}\n          pattern={/^[a-zA-Z\\s(),]+$/}\n          fieldCode=\"name.en-US\"\n        />\n      </td>\n      <td className=\"label\">Prime Mufti (Bangla)</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.primeMufti[\"bn-BD\"]}\n          Element={Input}\n          max={200}\n          fieldCode=\"primeMufti.bn-BD\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Prime Mufti (English)</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.primeMufti[\"en-US\"]}\n          Element={Input}\n          max={200}\n          fieldCode=\"primeMufti.en-US\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Founder</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.founder}\n          Element={Textarea}\n          max={200}\n          fieldCode=\"founder\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Address</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.address}\n          Element={Textarea}\n          max={200}\n          fieldCode=\"address\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Contact</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.contact}\n          Element={Input}\n          pattern={/^\\+8801\\d{0,9}$/}\n          tel={true}\n          fieldCode=\"contact\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">About</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.about}\n          Element={Textarea}\n          pattern={/^[ঀ-ৣৰ-৾a-zA-Z\\s(),-]+$/}\n          fieldCode=\"about\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Applicant's Name</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.appl.name}\n          Element={Input}\n          pattern={/^[ঀ-ৣৰ-৾a-zA-Z\\s(),-]+$/}\n          fieldCode=\"appl.name\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Applicant's designation</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.appl.designation}\n          Element={Input}\n          pattern={/^[ঀ-ৣৰ-৾a-zA-Z\\s(),-]+$/}\n          fieldCode=\"appl.designation\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"label\">Applicant's mobile</td>\n      <td className=\"data\">\n        <DataEditForm\n          defaultValue={jamia.appl.mob}\n          Element={Input}\n          pattern={/^\\+8801\\d{0,9}$/}\n          tel={true}\n          fieldCode=\"appl.mob\"\n          api={patchApi}\n        />\n      </td>\n      <td className=\"data btns\">\n        <Submit\n          loading={loading}\n          onClick={ghost}\n          label={\n            <>\n              <ion-icon name=\"skull-outline\"></ion-icon> Ghost\n            </>\n          }\n        />\n        <button className=\"hideDetail\" onClick={() => setShowFull(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon>Hide Detail\n        </button>\n        <Submit\n          loading={loading}\n          onClick={remove}\n          label={\n            <>\n              <ion-icon name=\"trash-outline\"></ion-icon> Remove\n            </>\n          }\n        />\n      </td>\n    </tr>\n  );\n}\n\nfunction AllFatwa({ history, location, match }) {\n  const { locale } = useContext(SiteContext);\n  return (\n    <div className=\"view\">\n      <h1 className=\"viewTitle\">\n        <FormattedMessage id=\"fatwa\" defaultMessage=\"Fatwa\" />\n      </h1>\n      <Tabs\n        page=\"/admin/fatwa/\"\n        tabs={[\n          {\n            label: <FormattedMessage id=\"live\" defaultMessage=\"Live\" />,\n            link: \"live\",\n          },\n          {\n            label: <FormattedMessage id=\"pending\" defaultMessage=\"pending\" />,\n            link: \"pending\",\n          },\n        ]}\n      />\n      <Switch>\n        <Route path=\"/admin/fatwa\" exact>\n          <View\n            key=\"allFatwa\"\n            Element={SingleFatwa}\n            id=\"allFatwa\"\n            api=\"api/admin/allfatwa/filter?\"\n            categories={[\n              {\n                name: \"topic\",\n                input: (\n                  <Combobox\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                name: \"title\",\n                input: <Input label=\"Title\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"question\",\n                input: <Input label=\"Question\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"answer\",\n                input: <Input label=\"Answer\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"jamia\",\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={500}\n                    label=\"jamia\"\n                    data={[\"jamia 1\", \"jamia 2\", \"jamia 3\"]}\n                    required={true}\n                  />\n                ),\n              },\n              {\n                name: \"translation\",\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={500}\n                    label=\"jamia\"\n                    data={[\"Generated\", \"Manual\"]}\n                    required={true}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"source\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage\n                    id=\"translation\"\n                    defaultMessage=\"Translation\"\n                  />\n                ),\n                sort: true,\n                colCode: \"translation\",\n              },\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n                colCode: \"title\",\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n        <Route path=\"/admin/fatwa/live\">\n          <View\n            key=\"allFatwa\"\n            Element={SingleFatwa}\n            id=\"allFatwa\"\n            api=\"api/admin/allfatwa/filter?\"\n            categories={[\n              {\n                name: \"topic\",\n                input: (\n                  <Combobox\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                name: \"title\",\n                input: <Input label=\"Title\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"question\",\n                input: <Input label=\"Question\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"answer\",\n                input: <Input label=\"Answer\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"jamia\",\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={500}\n                    label=\"jamia\"\n                    data={[\"jamia 1\", \"jamia 2\", \"jamia 3\"]}\n                    required={true}\n                  />\n                ),\n              },\n              {\n                name: \"translation\",\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={500}\n                    label=\"jamia\"\n                    data={[\"Generated\", \"Manual\"]}\n                    required={true}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"source\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage\n                    id=\"translation\"\n                    defaultMessage=\"Translation\"\n                  />\n                ),\n                sort: true,\n                colCode: \"translation\",\n              },\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n                colCode: \"title\",\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n        <Route path=\"/admin/fatwa/pending\">\n          <View\n            key=\"allFatwaSubmission\"\n            Element={SingleFatwaSubmission}\n            id=\"fatwaSubmissions\"\n            api=\"api/admin/fatwaSubmissions/filter?\"\n            categories={[\n              {\n                name: \"topic\",\n                input: (\n                  <Combobox\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                  />\n                ),\n              },\n              {\n                name: \"title\",\n                input: <Input label=\"Title\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"question\",\n                input: <Input label=\"Question\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"answer\",\n                input: <Input label=\"Answer\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"jamia\",\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={500}\n                    label=\"jamia\"\n                    data={[\"jamia 1\", \"jamia 2\", \"jamia 3\"]}\n                    required={true}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              {\n                column: <FormattedMessage id=\"date\" defaultMessage=\"Date\" />,\n                sort: true,\n                colCode: \"createdAt\",\n              },\n              {\n                column: <FormattedMessage id=\"topic\" defaultMessage=\"Topic\" />,\n                sort: true,\n                colCode: \"topic\",\n              },\n              {\n                column: (\n                  <FormattedMessage id=\"source\" defaultMessage=\"Source\" />\n                ),\n                sort: true,\n                colCode: \"jamia\",\n              },\n              {\n                column: <FormattedMessage id=\"title\" defaultMessage=\"Title\" />,\n                sort: false,\n              },\n            ]}\n            defaultSort={{ column: \"createdAt\", order: \"des\" }}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nfunction SingleFatwaSubmission({ data, setData }) {\n  const { locale, setFatwaToEdit } = useContext(SiteContext);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const fatwa = data;\n  const history = useHistory();\n  function editFatwaSubmission(id) {\n    setFatwaToEdit(fatwa);\n    history.push(\"/admin/add\");\n  }\n  function acceptFatwa() {\n    setLoading(true);\n    fetch(`/api/admin/fatwaSubmissions/accept/${fatwa._id}`, { method: \"POST\" })\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setData((prev) => {\n            return prev.filter((item) => item._id !== fatwa._id);\n          });\n        } else {\n          alert(\"something went wrong\");\n        }\n      })\n      .catch((err) => {\n        alert(\"something went wrong!\");\n        console.log(err);\n      });\n  }\n  function removeSubmission() {\n    setLoading(true);\n    fetch(`/api/admin/fatwaSubmissions/remove/${fatwa._id}`, {\n      method: \"DELETE\",\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => {\n            return prev.filter((item) => item._id !== fatwa._id);\n          });\n        } else {\n          alert(\"something went wrong!\");\n        }\n      })\n      .catch((err) => {\n        alert(\"something went wrong!\");\n        console.log(err);\n      });\n  }\n  return open ? (\n    <tr data-id={fatwa._id} className={`full ${loading ? \"loading\" : \"\"}`}>\n      <td className=\"label\">Submitted</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(fatwa.createdAt)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"numeric\"\n        />\n      </td>\n      <td className=\"label\">topic</td>\n      <td className=\"data\">{fatwa.topic[locale]}</td>\n      <td className=\"label\">translation</td>\n      <td className=\"data\">{fatwa.translation ? \"Yes\" : \"No\"}</td>\n      <td className=\"label\">title (Bangla)</td>\n      <td className=\"data\">{fatwa.title[\"bn-BD\"]}</td>\n      {fatwa.title[\"en-US\"] && (\n        <>\n          <td className=\"label\">title (English)</td>\n          <td className=\"data\">{fatwa.title[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">question (Bangla)</td>\n      <td className=\"data\">{fatwa.ques[\"bn-BD\"]}</td>\n      {fatwa.ques[\"en-US\"] && (\n        <>\n          <td className=\"label\">question (English)</td>\n          <td className=\"data\">{fatwa.ques[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">answer (Bangla)</td>\n      <td className=\"data\">{fatwa.ans[\"bn-BD\"]}</td>\n      {fatwa.ans[\"en-US\"] && (\n        <>\n          <td className=\"label\">answer (English)</td>\n          <td className=\"data\">{fatwa.ans[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">Ref.</td>\n      <td className=\"data\">\n        <ul>\n          {fatwa.ref.map((item, i) =>\n            item.book ? (\n              <li key={item.book + item.part + item.page}>\n                book: {item.book}, part: {item.part}, page: {item.page}\n              </li>\n            ) : (\n              <li key={item.sura + item.aayat}>\n                sura: {item.sura}, aayat: {item.aayat}\n              </li>\n            )\n          )}\n        </ul>\n      </td>\n      <td className=\"btns data\">\n        <Submit\n          loading={loading}\n          onClick={acceptFatwa}\n          label={\n            <>\n              <ion-icon name=\"checkmark-outline\"></ion-icon> Accept\n            </>\n          }\n        />\n        <button disabled={loading} onClick={() => setOpen(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon> Hide Detail\n        </button>\n        <button disabled={loading} onClick={editFatwaSubmission}>\n          <ion-icon name=\"pencil-outline\"></ion-icon> Edit\n        </button>\n        <Submit\n          loading={loading}\n          onClick={removeSubmission}\n          label={\n            <>\n              <ion-icon name=\"trash-outline\"></ion-icon> Delete\n            </>\n          }\n        />\n      </td>\n    </tr>\n  ) : (\n    <tr\n      className={loading ? \"loading\" : \"\"}\n      data-id={fatwa._id}\n      onClick={() => setOpen(true)}\n    >\n      <td>\n        <FormattedDate\n          value={new Date(fatwa.createdAt)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"numeric\"\n        />\n      </td>\n      <td>{fatwa.topic[locale]}</td>\n      <td>{fatwa.source.name[locale]}</td>\n      <td>{fatwa.title[locale]}</td>\n    </tr>\n  );\n}\nfunction SingleFatwa({ data, setData }) {\n  const { locale } = useContext(SiteContext);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const fatwa = data;\n  function deleteFatwa() {\n    setLoading(true);\n    fetch(`/api/admin/fatwa/`, {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ fatwa: fatwa._id, source: fatwa.source._id }),\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => {\n            return prev.filter((item) => item._id !== fatwa._id);\n          });\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  return open ? (\n    <tr data-id={fatwa._id} className={`${open ? \"full\" : \"\"}`}>\n      <td className=\"label\">Added</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={new Date(fatwa.createdAt)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"numeric\"\n        />\n      </td>\n      <td className=\"label\">jamia</td>\n      <td className=\"data\">{fatwa.jamia}</td>\n      <td className=\"label\">topic</td>\n      <td className=\"data\">{fatwa.topic[locale]}</td>\n      <td className=\"label\">title (Bangla)</td>\n      <td className=\"data\">\n        <Link target=\"_blank\" to={`/fatwa/${fatwa.link[\"bn-BD\"]}`}>\n          {fatwa.title[\"bn-BD\"]}\n        </Link>\n      </td>\n      {fatwa.title[\"en-US\"] && (\n        <>\n          <td className=\"label\">title (English)</td>\n          <td className=\"data\">\n            <Link to={`/fatwa/${fatwa.link[\"en-US\"]}`}>\n              {fatwa.title[\"en-US\"]}\n            </Link>\n          </td>\n        </>\n      )}\n      <td className=\"label\">question (Bangla)</td>\n      <td className=\"data\">{fatwa.ques[\"bn-BD\"]}</td>\n      {fatwa.ques[\"en-US\"] && (\n        <>\n          <td className=\"label\">question (English)</td>\n          <td className=\"data\">{fatwa.ques[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">answer (Bangla)</td>\n      <td className=\"data\">{fatwa.ans[\"bn-BD\"]}</td>\n      {fatwa.ans[\"en-US\"] && (\n        <>\n          <td className=\"label\">answer (English)</td>\n          <td className=\"data\">{fatwa.ans[\"en-US\"]}</td>\n        </>\n      )}\n      <td className=\"label\">Ref.</td>\n      <td className=\"data\">\n        <ul>\n          {fatwa.ref &&\n            fatwa.ref.map((item, i) =>\n              item.book ? (\n                <li key={item.book + item.part + item.page}>\n                  <FormattedMessage id=\"book\" defaultMessage=\"Book\" />:{\" \"}\n                  {item.book},{\" \"}\n                  <FormattedMessage id=\"part\" defaultMessage=\"Part\" />:{\" \"}\n                  <FormattedNumber value={item.part} />,{\" \"}\n                  <FormattedMessage id=\"page\" defaultMessage=\"Page\" />:{\" \"}\n                  <FormattedNumber value={item.page} />\n                </li>\n              ) : (\n                <li key={item.sura + item.aayat}>\n                  sura: {item.sura}, aayat: {item.aayat}\n                </li>\n              )\n            )}\n        </ul>\n      </td>\n      <td className=\"btns data\">\n        <button onClick={() => setOpen(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon> Hide Detail\n        </button>\n        <Submit\n          loading={loading}\n          onClick={deleteFatwa}\n          label={\n            <>\n              <ion-icon name=\"trash-outline\"></ion-icon> Delete\n            </>\n          }\n        />\n      </td>\n    </tr>\n  ) : (\n    <tr data-id={fatwa._id} onClick={() => setOpen(true)}>\n      <td>{fatwa.source.name[locale]}</td>\n      <td>{fatwa.topic[locale]}</td>\n      <td>{fatwa.translation ? \"Yes\" : \"No\"}</td>\n      <td>\n        <FormattedDate\n          value={new Date(fatwa.createdAt)}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"numeric\"\n        />\n      </td>\n      <td>{fatwa.title[locale]}</td>\n    </tr>\n  );\n}\n\nfunction SinglePatreon() {\n  return (\n    <tr>\n      <td>Make patreon rows</td>\n    </tr>\n  );\n}\nfunction Patreons() {\n  return (\n    <div className=\"view\">\n      <h1>Patreons</h1>\n      <Tabs page=\"/admin/patreons/\" tabs={[\"All\"]} />\n      <Switch>\n        <Route path=\"/admin/patreons\">\n          <View\n            Element={SinglePatreon}\n            defaultSort={{ column: \"date\", order: \"des\" }}\n            id=\"allPatreons\"\n            api=\"api/admin/patreons/filter?\"\n            categories={[]}\n            columns={[\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"amount\", sort: true, colCode: \"amount\" },\n              { column: \"date\", sort: true, colCode: \"date\" },\n            ]}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nfunction UserReview() {\n  const { locale } = useContext(SiteContext);\n  return (\n    <div className=\"view\">\n      <h1>\n        <FormattedMessage id=\"review\" defaultMessage=\"User Review\" />\n      </h1>\n      <Tabs\n        page=\"/admin/user/\"\n        tabs={[\n          { label: \"Questions\", link: \"questions\" },\n          { label: \"Answered Question\", link: \"answeredQuestion\" },\n          { label: \"Review\", link: \"review\" },\n          { label: \"Report\", link: \"report\" },\n        ]}\n      />\n      <Switch>\n        <Route path=\"/admin/user\" exact>\n          <View\n            Element={SingleUserQuestions}\n            defaultSort={{ column: \"submitted\", order: \"des\" }}\n            id=\"userSubmissions\"\n            api=\"api/admin/userQuestion/filter?\"\n            categories={[\n              {\n                name: \"topic\",\n                input: (\n                  <Combobox\n                    options={topics.map((option) => {\n                      return {\n                        label: option[locale],\n                        value: option,\n                      };\n                    })}\n                    required={true}\n                  ></Combobox>\n                ),\n              },\n              {\n                name: \"name\",\n                input: <Input label=\"Name\" type=\"text\" required={true} />,\n              },\n              {\n                name: \"answered\",\n                input: (\n                  <Combobox\n                    label=\"Answered\"\n                    options={[\n                      { label: \"Answered\", value: true },\n                      { label: \"Not answered\", value: false },\n                    ]}\n                    required={true}\n                  />\n                ),\n              },\n              {\n                name: \"taken\",\n                input: (\n                  <Combobox\n                    id={ID(8)}\n                    maxHeight={500}\n                    label=\"jamia\"\n                    data={[\"jamia 1\", \"jamia 2\", \"jamia 3\"]}\n                    required={true}\n                  />\n                ),\n              },\n            ]}\n            columns={[\n              { column: \"date\", sort: true, colCode: \"createdAt\" },\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"question\", sort: false, colCode: \"ques\" },\n              { column: \"answers\", sort: true, colCode: \"ansCount\" },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/user/questions\">\n          <View\n            Element={SingleUserQuestions}\n            defaultSort={{ column: \"submitted\", order: \"des\" }}\n            id=\"userSubmissions\"\n            api=\"api/admin/userQuestion/filter?\"\n            columns={[\n              { column: \"date\", sort: true, colCode: \"submitted\" },\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"question\", sort: false, colCode: \"ques\" },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/user/answeredQuestion\">\n          <View\n            Element={SingleUserReview}\n            defaultSort={{ column: \"date\", order: \"des\" }}\n            id=\"answeredQuestion\"\n            api=\"api/admin/userReview/filter?\"\n            columns={[\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"date\", sort: true, colCode: \"date\" },\n              { column: \"message\", sort: false, colCode: \"message\" },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/user/review\">\n          <View\n            Element={SingleUserReview}\n            defaultSort={{ column: \"date\", order: \"des\" }}\n            id=\"answeredQuestion\"\n            api=\"api/admin/userReview/filter?\"\n            columns={[\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"date\", sort: true, colCode: \"date\" },\n              { column: \"message\", sort: false, colCode: \"message\" },\n            ]}\n          />\n        </Route>\n        <Route path=\"/admin/user/report\">\n          <View\n            Element={SingleUserReview}\n            defaultSort={{ column: \"date\", order: \"des\" }}\n            id=\"allReports\"\n            api=\"api/admin/userReview/filter?\"\n            columns={[\n              { column: \"name\", sort: false, colCode: \"name\" },\n              { column: \"date\", sort: true, colCode: \"date\" },\n              { column: \"message\", sort: false, colCode: \"message\" },\n            ]}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nfunction SingleUserReview() {\n  return (\n    <tr>\n      <td>Make user review rows</td>\n    </tr>\n  );\n}\nfunction SingleUserQuestions({ data, setData }) {\n  const { locale } = useContext(SiteContext);\n  const [open, setOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const ques = data;\n  function remove() {\n    setLoading(true);\n    fetch(\"/api/admin/removeUserQuestion\", {\n      method: \"DELETE\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ _id: ques._id }),\n    })\n      .then((res) => {\n        setLoading(false);\n        if (res.status === 200) {\n          setData((prev) => prev.filter((item) => item._id !== ques._id));\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"something went wrong!\");\n      });\n  }\n  return !open ? (\n    <tr onClick={() => setOpen(true)}>\n      <td>\n        <FormattedDate\n          value={ques.createdAt}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td>\n        {ques.user.name}\n        <span>{ques.user.add}</span>\n      </td>\n      <td>{ques.ques.body}</td>\n      <td>\n        <FormattedNumber value={ques.ansCount} />\n      </td>\n    </tr>\n  ) : (\n    <tr className=\"full\">\n      <td className=\"label\">Submitted</td>\n      <td className=\"data\">\n        <FormattedDate\n          value={ques.createdAt}\n          day=\"numeric\"\n          month=\"numeric\"\n          year=\"2-digit\"\n        />\n      </td>\n      <td className=\"label\">Name</td>\n      <td className=\"data\">{ques.user.name}</td>\n      <td className=\"label\">Address</td>\n      <td className=\"data\">{ques.user.add}</td>\n      <td className=\"label\">Mobile</td>\n      <td className=\"data\">\n        <a href={`tel:${ques.user.mob}`}>{ques.user.mob}</a>\n      </td>\n      <td className=\"label\">Topic</td>\n      <td className=\"data\">{ques.ques.topic[locale]}</td>\n      <td className=\"label\">Question</td>\n      <td className=\"data\">{ques.ques.body}</td>\n      <td className=\"data btns\">\n        <button className=\"hideDetail\" onClick={() => setOpen(false)}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon>Hide Detail\n        </button>\n        <button disabled={loading} className=\"remove\" onClick={remove}>\n          <ion-icon name=\"trash-outline\"></ion-icon>Remove\n        </button>\n      </td>\n    </tr>\n  );\n}\n\nfunction QuestionFeed() {\n  return (\n    <div className=\"view questionFeed\">\n      <h1 className=\"viewTitle\">\n        <FormattedMessage id=\"questionFeed\" defaultMessage=\"Question Feed\" />\n      </h1>\n      <Tabs\n        page=\"/admin/questionFeed/\"\n        tabs={[{ label: \"New Questions\", link: \"newQuestions\" }]}\n      />\n      <Switch>\n        <Route path=\"/admin/questionFeed\" exact>\n          <NewQuestions />\n        </Route>\n        <Route path=\"/admin/questionFeed/newQuestions\">\n          <NewQuestions />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\nfunction NewQuestions() {\n  const abortController = new AbortController();\n  const signal = abortController.signal;\n  const { locale } = useContext(SiteContext);\n  const [loading, setLoading] = useState(true);\n  const [sort, setSort] = useState({ column: \"createdAt\", order: \"des\" });\n  const [data, setData] = useState([]);\n  function fetchData() {\n    setLoading(true);\n    const sortOrder = encodeURL(sort);\n    const options = { headers: { \"Accept-Language\": locale }, signal: signal };\n    const url = `/api/admin/questionFeed/filter?&${sortOrder}`;\n    fetch(url, options)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        setData(data);\n      })\n      .catch((err) => {\n        console.log(err);\n        console.log(\"handle error!!\");\n      });\n    return () => abortController.abort();\n  }\n  useEffect(fetchData, [sort]);\n  return (\n    <>\n      <div className=\"filters\">\n        <Combobox\n          disabled={loading}\n          defaultValue={1}\n          change={setSort}\n          maxHeight={200}\n          id=\"questionFeedSort\"\n          icon=\"layers\"\n          options={[\n            {\n              label: \"New first\",\n              value: { column: \"submitted\", order: \"asc\" },\n            },\n            {\n              label: \"Old first\",\n              value: { column: \"submitted\", order: \"des\" },\n            },\n          ]}\n        />\n      </div>\n      <ul className=\"feed\">\n        {!loading ? (\n          data.map((item) => <SingleQuestion key={item._id} data={item} />)\n        ) : (\n          <LoadingPost />\n        )}\n      </ul>\n    </>\n  );\n}\nfunction SingleQuestion({ data }) {\n  const { locale } = useContext(SiteContext);\n  const history = useHistory();\n  const container = useRef(null);\n  return (\n    <li\n      ref={container}\n      className={`question mini`}\n      onClick={(e) => {\n        if (e.target === container.current) {\n          history.push(\"/admin/questionFeed/\" + data._id);\n        }\n      }}\n    >\n      <div className=\"user\">\n        <p className=\"name\">{data.user.name}</p>\n        <p className=\"date\">\n          {new Date(data.submitted).getFullYear() !==\n          new Date().getFullYear() ? (\n            <FormattedDate\n              value={data.submitted}\n              day=\"numeric\"\n              month=\"long\"\n              year=\"numeric\"\n            />\n          ) : (\n            <FormattedDate value={data.submitted} day=\"numeric\" month=\"long\" />\n          )}\n          <span className=\"separator\" />\n          <FormattedTimeParts value={data.submitted}>\n            {(parts) => (\n              <>\n                {parts[0].value}\n                {parts[1].value}\n                {parts[2].value}\n                <small>{parts[4].value.toLowerCase()}</small>\n              </>\n            )}\n          </FormattedTimeParts>\n        </p>\n      </div>\n      <Actions\n        icon=\"reorder-two-outline\"\n        actions={[\n          {\n            label: \"Answer now\",\n            action: () => {\n              SS.set(\"userAns-ques\", data.ques.body);\n              SS.set(\"userAns-topic\", JSON.stringify(data.ques.topic));\n              history.push(`/admin/userQuestion/${data._id}/add`);\n            },\n          },\n        ]}\n      />\n      <p className=\"ques\">{data.ques.body}</p>\n      <ul className=\"tags\">\n        <li className=\"tag\">{data.ques.topic[locale]}</li>\n        <li className=\"tag\">\n          <FormattedMessage\n            values={{ number: <FormattedNumber value={data.ans.length} /> }}\n            id=\"ans.tag.ansCount\"\n            defaultMessage={`${data.ans.length} Answer(s)`}\n          />\n        </li>\n        <li className=\"tag\">\n          <FormattedMessage\n            values={{ number: <FormattedNumber value={data.reports.length} /> }}\n            id=\"ans.tag.reportCount\"\n            defaultMessage={`${data.reports.length} Reports(s)`}\n          />\n        </li>\n      </ul>\n    </li>\n  );\n}\n\nfunction UserQuestion({ history, match }) {\n  const [loading, setLoading] = useState(true);\n  const [userQues, setUserQues] = useState({});\n  useEffect(getData, []);\n  function getData() {\n    fetch(\"/api/admin/userQues/\" + match.params._id)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setUserQues(data.content);\n        } else {\n          throw data;\n        }\n      })\n      .catch((err) => {\n        alert(\"something went wrong\");\n        console.log(err);\n      });\n  }\n  if (userQues.ques) {\n    return (\n      <div className=\"view userQues\">\n        <div className=\"container\">\n          <div className=\"ques\">\n            <div className=\"user\">\n              <p className=\"name\">\n                <b>{userQues.user.name}</b>\n                <span className=\"separator\" />\n                <i>\n                  <span className=\"add\">{userQues.user.add}</span>\n                </i>\n              </p>\n              <p className=\"date\">\n                <FormattedDate\n                  value={userQues.createdAt}\n                  day=\"numeric\"\n                  month=\"long\"\n                  year=\"numeric\"\n                />\n                <span className=\"separator\" />\n                <FormattedTimeParts value={userQues.createdAt}>\n                  {(parts) => (\n                    <>\n                      {parts[0].value}\n                      {parts[1].value}\n                      {parts[2].value}\n                      <small>{parts[4].value.toLowerCase()}</small>\n                    </>\n                  )}\n                </FormattedTimeParts>\n              </p>\n            </div>\n            <p className=\"body\">{userQues.ques.body}</p>\n          </div>\n          <Tabs\n            page={`/admin/questionFeed/${userQues._id}/`}\n            tabs={[\n              { label: \"Answers\", link: \"answers\" },\n              { label: \"Reports\", link: \"reports\" },\n              { label: \"Add answer\", link: \"addAnswer\" },\n            ]}\n          />\n          <Switch>\n            <Route path={`/admin/questionFeed/${userQues._id}`} exact>\n              {userQues.ans.map((item) => (\n                <Answer\n                  key={item._id}\n                  ques={userQues}\n                  ans={item}\n                  setQues={setUserQues}\n                />\n              ))}\n            </Route>\n            <Route path={`/admin/questionFeed/${userQues._id}/answers`}>\n              {userQues.ans.map((item) => (\n                <Answer\n                  key={item._id}\n                  ques={userQues}\n                  ans={item}\n                  setQues={setUserQues}\n                />\n              ))}\n            </Route>\n            <Route path={`/admin/questionFeed/${userQues._id}/reports`}>\n              {userQues.reports.map((report) => (\n                <Report key={report._id} report={report} />\n              ))}\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"view\">\n      {loading ? <h1>loading</h1> : <p>Question did not found!</p>}\n    </div>\n  );\n}\nfunction Answer({ ques, ans, setQues }) {\n  const { locale, user } = useContext(SiteContext);\n  const [loading, setLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const history = useHistory();\n  function approve() {\n    setLoading(true);\n    const options = {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ ans_id: ans._id }),\n    };\n    fetch(`/api/admin/userQues/approveAns/${ques._id}`, options)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          history.push(\"/admin/questionFeed\");\n        } else {\n          throw data.code;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"something went wrong\");\n      });\n  }\n  function edit() {\n    SS.set(\"ansFatwa-ans\", ans.body);\n    SS.set(\"ansFatwa-title\", ans.title);\n    SS.set(\"ansFatwa-ref\", JSON.stringify(ans.ref));\n    history.push(history.location.pathname + \"/add\");\n  }\n  function remove() {\n    const options = {\n      method: \"DELETE\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify({ source: ans.source._id, _id: ans._id }),\n    };\n    setLoading(true);\n    fetch(`/api/admin/userQues/answer/${ques._id}`, options)\n      .then((res) => res.json())\n      .then((data) => {\n        setLoading(false);\n        if (data.code === \"ok\") {\n          setQues(data.content);\n        } else {\n          throw data.code;\n        }\n      })\n      .catch((err) => {\n        console.log(err);\n        alert(\"something went wrong\");\n      });\n  }\n  return (\n    <div\n      className={`ans ${ans.source._id === user._id ? \"mine\" : \"\"} ${\n        !open ? \"mini\" : \"\"\n      }`}\n    >\n      <div className=\"vote\">\n        <div className={`content`}>\n          <ion-icon name=\"chevron-up-outline\"></ion-icon>\n          <p className=\"voteCount\">\n            <FormattedNumber value={ans.vote.count} />\n          </p>\n          <ion-icon name=\"chevron-down-outline\"></ion-icon>\n        </div>\n      </div>\n      <div className=\"content\">\n        <div className=\"source\">\n          <p className=\"name\">\n            <b>{ans.source.name[locale]}</b>\n          </p>\n          <p className=\"date\">\n            <FormattedDate\n              value={ans.createdAt}\n              day=\"numeric\"\n              month=\"long\"\n              year=\"numeric\"\n            />\n            {loading && <p>loading</p>}\n            <span className=\"separator\" />\n            <FormattedTimeParts value={ans.createdAt}>\n              {(parts) => (\n                <>\n                  {parts[0].value}\n                  {parts[1].value}\n                  {parts[2].value}\n                  <small>{parts[4].value.toLowerCase()}</small>\n                </>\n              )}\n            </FormattedTimeParts>\n          </p>\n        </div>\n        <div className=\"body\">\n          <p className=\"title\">\n            {ans.topic[locale]}: {ans.title}\n          </p>\n          <p className=\"answer\">{ans.body}</p>\n        </div>\n        {open && ans.ref.length > 0 && (\n          <div className=\"ref\">\n            <p>\n              <FormattedMessage id=\"ref\" value=\"Ref.\" />\n            </p>\n            <ul className=\"ref\">\n              {ans.ref.map((ref, i) =>\n                ref.book ? (\n                  <li key={i}>\n                    <span>{ref.book}</span>,{\" \"}\n                    <FormattedMessage id=\"page\" defaultMessage=\"Page\" />{\" \"}\n                    <span>\n                      <FormattedNumber value={ref.part} />\n                    </span>\n                    , <FormattedMessage id=\"part\" defaultMessage=\"Part\" />{\" \"}\n                    <span>\n                      <FormattedNumber value={ref.page} />\n                    </span>\n                  </li>\n                ) : (\n                  <li key={i}>\n                    <span>{ref.sura}</span>,{\" \"}\n                    <FormattedMessage id=\"aayat\" defaultMessage=\"Aayat\" />{\" \"}\n                    <span>\n                      <FormattedNumber value={ref.aayat} />\n                    </span>\n                  </li>\n                )\n              )}\n            </ul>\n          </div>\n        )}\n        {!open && (\n          <div className=\"tags\">\n            <p className=\"tag\">\n              <FormattedMessage\n                values={{ number: <FormattedNumber value={ans.ref.length} /> }}\n                id=\"ans.tag.refCount\"\n                defaultMessage={`${ans.ref.length} Reference(s)`}\n              />\n            </p>\n            <p className=\"tag\">\n              <FormattedMessage\n                values={{\n                  number: <FormattedNumber value={ans.vote.voters.length} />,\n                }}\n                id=\"ans.tag.voteCount\"\n                defaultMessage={`${ans.vote.voters.length} Vote(s)`}\n              />\n            </p>\n          </div>\n        )}\n        <span onClick={() => setOpen(!open)} className=\"showFull\">\n          {open ? \"পুরো উত্তর গোপন করুন\" : \"পুরো উত্তর দেখুন\"}\n        </span>\n      </div>\n      <Actions\n        icon=\"reorder-two-outline\"\n        actions={[\n          { label: \"Edit\", action: edit },\n          { label: \"Approve\", action: approve },\n          { label: \"Remove\", action: remove },\n        ]}\n      />\n    </div>\n  );\n}\nfunction Report({ report }) {\n  const { locale } = useContext(SiteContext);\n  return (\n    <div className=\"quesReports\">\n      <div className=\"user\">\n        <p className=\"name\">\n          <b>{report.source.name[locale]}</b>\n        </p>\n        <p className=\"date\">\n          <FormattedDate\n            value={report.createdAt}\n            day=\"numeric\"\n            month=\"long\"\n            year=\"numeric\"\n          />\n          <span className=\"separator\" />\n          <FormattedTimeParts value={report.createdAt}>\n            {(parts) => (\n              <>\n                {parts[0].value}\n                {parts[1].value}\n                {parts[2].value}\n                <small>{parts[4].value.toLowerCase()}</small>\n              </>\n            )}\n          </FormattedTimeParts>\n        </p>\n      </div>\n      <div className=\"contect\">\n        <p className=\"subject\">{report.message.subject}</p>\n        <p className=\"body\">{report.message.body}</p>\n      </div>\n    </div>\n  );\n}\n\nfunction AdminPanel() {\n  return (\n    <div className=\"main adminPanel\">\n      <Sidebar\n        views={[\n          {\n            label: <FormattedMessage id=\"source\" defaultMessage=\"Source\" />,\n            path: \"/admin/sources\",\n            icon: \"book\",\n          },\n          {\n            label: <FormattedMessage id=\"fatwa\" defaultMessage=\"Fatwa\" />,\n            path: \"/admin/fatwa\",\n            icon: \"reader\",\n          },\n          {\n            label: (\n              <FormattedMessage id=\"userArea\" defaultMessage=\"User Area\" />\n            ),\n            path: \"/admin/user\",\n            icon: \"people\",\n          },\n          {\n            label: <FormattedMessage id=\"patreons\" defaultMessage=\"Patreons\" />,\n            path: \"/admin/patreons\",\n            icon: \"umbrella\",\n          },\n          {\n            label: (\n              <FormattedMessage\n                id=\"questionFeed\"\n                defaultMessage=\"Question Feed\"\n              />\n            ),\n            path: \"/admin/questionFeed\",\n            icon: \"mail\",\n          },\n        ]}\n      >\n        <div className=\"profile\">\n          <h2>A</h2>\n        </div>\n      </Sidebar>\n      <Switch>\n        <Route path=\"/admin\" exact component={AllSources} />\n        <Route path=\"/admin/sources\" component={AllSources} />\n        <Route path=\"/admin/fatwa/:filter?\" component={AllFatwa} />\n        <Route path=\"/admin/patreons\" component={Patreons} />\n        <Route path=\"/admin/user\" component={UserReview} />\n        <Route path=\"/admin/questionFeed/:_id\" component={UserQuestion} />\n        <Route path=\"/admin/questionFeed\" component={QuestionFeed} />\n        <Route path=\"/\" component={FourOFour} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default AdminPanel;\n","C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Searchbar.js",["106","107","108","109","110","111","112"],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\Modals.js",[],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\FormElements.js",["113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157"],"C:\\Users\\naeem\\OneDrive\\Documents\\Atom\\FatwaArchive\\client\\src\\components\\TableElements.js",["158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":41,"column":40,"nodeType":"166","messageId":"167","endLine":41,"endColumn":50},{"ruleId":"168","severity":1,"message":"169","line":80,"column":21,"nodeType":"170","endLine":80,"endColumn":23,"suggestions":"171"},{"ruleId":"168","severity":1,"message":"172","line":81,"column":28,"nodeType":"170","endLine":81,"endColumn":30,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"174","line":27,"column":35,"nodeType":"170","endLine":27,"endColumn":43,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"176","line":46,"column":24,"nodeType":"170","endLine":46,"endColumn":31,"suggestions":"177"},{"ruleId":"178","severity":1,"message":"179","line":42,"column":15,"nodeType":"180","endLine":42,"endColumn":18},{"ruleId":"178","severity":1,"message":"179","line":34,"column":33,"nodeType":"180","endLine":34,"endColumn":36},{"ruleId":"178","severity":1,"message":"179","line":34,"column":46,"nodeType":"180","endLine":34,"endColumn":49},{"ruleId":"164","severity":1,"message":"181","line":4,"column":28,"nodeType":"166","messageId":"167","endLine":4,"endColumn":36},{"ruleId":"164","severity":1,"message":"182","line":19,"column":19,"nodeType":"166","messageId":"167","endLine":19,"endColumn":26},{"ruleId":"164","severity":1,"message":"183","line":19,"column":28,"nodeType":"166","messageId":"167","endLine":19,"endColumn":39},{"ruleId":"168","severity":1,"message":"184","line":65,"column":24,"nodeType":"170","endLine":65,"endColumn":56,"suggestions":"185"},{"ruleId":"168","severity":1,"message":"186","line":164,"column":6,"nodeType":"170","endLine":164,"endColumn":13,"suggestions":"187"},{"ruleId":"168","severity":1,"message":"188","line":747,"column":24,"nodeType":"170","endLine":747,"endColumn":30,"suggestions":"189"},{"ruleId":"168","severity":1,"message":"190","line":1066,"column":22,"nodeType":"170","endLine":1066,"endColumn":24,"suggestions":"191"},{"ruleId":"164","severity":1,"message":"192","line":18,"column":3,"nodeType":"166","messageId":"167","endLine":18,"endColumn":20},{"ruleId":"168","severity":1,"message":"193","line":154,"column":22,"nodeType":"170","endLine":154,"endColumn":24,"suggestions":"194"},{"ruleId":"168","severity":1,"message":"195","line":388,"column":23,"nodeType":"170","endLine":388,"endColumn":35,"suggestions":"196"},{"ruleId":"168","severity":1,"message":"197","line":622,"column":25,"nodeType":"170","endLine":622,"endColumn":32,"suggestions":"198"},{"ruleId":"168","severity":1,"message":"199","line":1133,"column":25,"nodeType":"170","endLine":1133,"endColumn":27,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":1392,"column":9,"nodeType":"203","endLine":1395,"endColumn":11},{"ruleId":"201","severity":1,"message":"202","line":1409,"column":9,"nodeType":"203","endLine":1412,"endColumn":11},{"ruleId":"168","severity":1,"message":"204","line":1624,"column":23,"nodeType":"170","endLine":1624,"endColumn":32,"suggestions":"205"},{"ruleId":"168","severity":1,"message":"188","line":1438,"column":24,"nodeType":"170","endLine":1438,"endColumn":30,"suggestions":"206"},{"ruleId":"168","severity":1,"message":"207","line":1550,"column":22,"nodeType":"170","endLine":1550,"endColumn":24,"suggestions":"208"},{"ruleId":"164","severity":1,"message":"209","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":22},{"ruleId":"164","severity":1,"message":"210","line":9,"column":7,"nodeType":"166","messageId":"167","endLine":9,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":11,"column":38,"nodeType":"213","messageId":"214","endLine":11,"endColumn":39,"suggestions":"215"},{"ruleId":"168","severity":1,"message":"216","line":35,"column":6,"nodeType":"170","endLine":35,"endColumn":13,"suggestions":"217"},{"ruleId":"168","severity":1,"message":"218","line":74,"column":30,"nodeType":"170","endLine":74,"endColumn":32,"suggestions":"219"},{"ruleId":"168","severity":1,"message":"220","line":99,"column":24,"nodeType":"170","endLine":99,"endColumn":31,"suggestions":"221"},{"ruleId":"178","severity":1,"message":"179","line":190,"column":17,"nodeType":"180","endLine":208,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":63,"column":1,"nodeType":"224","messageId":"225","endLine":71,"endColumn":2},{"ruleId":"164","severity":1,"message":"226","line":95,"column":5,"nodeType":"166","messageId":"167","endLine":95,"endColumn":24},{"ruleId":"164","severity":1,"message":"227","line":96,"column":7,"nodeType":"166","messageId":"167","endLine":96,"endColumn":19},{"ruleId":"164","severity":1,"message":"228","line":97,"column":5,"nodeType":"166","messageId":"167","endLine":97,"endColumn":22},{"ruleId":"164","severity":1,"message":"229","line":99,"column":5,"nodeType":"166","messageId":"167","endLine":99,"endColumn":22},{"ruleId":"164","severity":1,"message":"230","line":103,"column":7,"nodeType":"166","messageId":"167","endLine":103,"endColumn":19},{"ruleId":"164","severity":1,"message":"231","line":104,"column":5,"nodeType":"166","messageId":"167","endLine":104,"endColumn":17},{"ruleId":"164","severity":1,"message":"232","line":105,"column":5,"nodeType":"166","messageId":"167","endLine":105,"endColumn":17},{"ruleId":"164","severity":1,"message":"233","line":135,"column":7,"nodeType":"166","messageId":"167","endLine":135,"endColumn":17},{"ruleId":"234","severity":1,"message":"235","line":218,"column":14,"nodeType":"166","messageId":"236","endLine":218,"endColumn":15},{"ruleId":"234","severity":1,"message":"237","line":219,"column":11,"nodeType":"166","messageId":"236","endLine":219,"endColumn":15},{"ruleId":"234","severity":1,"message":"238","line":220,"column":11,"nodeType":"166","messageId":"236","endLine":220,"endColumn":15},{"ruleId":"234","severity":1,"message":"235","line":230,"column":14,"nodeType":"166","messageId":"236","endLine":230,"endColumn":15},{"ruleId":"234","severity":1,"message":"237","line":231,"column":11,"nodeType":"166","messageId":"236","endLine":231,"endColumn":15},{"ruleId":"234","severity":1,"message":"238","line":232,"column":11,"nodeType":"166","messageId":"236","endLine":232,"endColumn":15},{"ruleId":"164","severity":1,"message":"239","line":246,"column":7,"nodeType":"166","messageId":"167","endLine":246,"endColumn":15},{"ruleId":"164","severity":1,"message":"240","line":250,"column":7,"nodeType":"166","messageId":"167","endLine":250,"endColumn":15},{"ruleId":"164","severity":1,"message":"241","line":254,"column":7,"nodeType":"166","messageId":"167","endLine":254,"endColumn":14},{"ruleId":"164","severity":1,"message":"242","line":258,"column":7,"nodeType":"166","messageId":"167","endLine":258,"endColumn":14},{"ruleId":"164","severity":1,"message":"243","line":262,"column":7,"nodeType":"166","messageId":"167","endLine":262,"endColumn":15},{"ruleId":"164","severity":1,"message":"244","line":270,"column":7,"nodeType":"166","messageId":"167","endLine":270,"endColumn":18},{"ruleId":"164","severity":1,"message":"245","line":276,"column":7,"nodeType":"166","messageId":"167","endLine":276,"endColumn":19},{"ruleId":"164","severity":1,"message":"246","line":281,"column":7,"nodeType":"166","messageId":"167","endLine":281,"endColumn":15},{"ruleId":"164","severity":1,"message":"247","line":286,"column":7,"nodeType":"166","messageId":"167","endLine":286,"endColumn":21},{"ruleId":"164","severity":1,"message":"248","line":291,"column":7,"nodeType":"166","messageId":"167","endLine":291,"endColumn":21},{"ruleId":"164","severity":1,"message":"249","line":296,"column":7,"nodeType":"166","messageId":"167","endLine":296,"endColumn":20},{"ruleId":"164","severity":1,"message":"250","line":301,"column":7,"nodeType":"166","messageId":"167","endLine":301,"endColumn":16},{"ruleId":"164","severity":1,"message":"251","line":306,"column":7,"nodeType":"166","messageId":"167","endLine":306,"endColumn":17},{"ruleId":"164","severity":1,"message":"252","line":311,"column":7,"nodeType":"166","messageId":"167","endLine":311,"endColumn":17},{"ruleId":"234","severity":1,"message":"253","line":322,"column":13,"nodeType":"166","messageId":"236","endLine":322,"endColumn":19},{"ruleId":"234","severity":1,"message":"254","line":334,"column":11,"nodeType":"166","messageId":"236","endLine":334,"endColumn":23},{"ruleId":"164","severity":1,"message":"255","line":339,"column":7,"nodeType":"166","messageId":"167","endLine":339,"endColumn":20},{"ruleId":"234","severity":1,"message":"256","line":343,"column":9,"nodeType":"166","messageId":"236","endLine":343,"endColumn":17},{"ruleId":"234","severity":1,"message":"257","line":344,"column":9,"nodeType":"166","messageId":"236","endLine":344,"endColumn":20},{"ruleId":"234","severity":1,"message":"258","line":345,"column":9,"nodeType":"166","messageId":"236","endLine":345,"endColumn":20},{"ruleId":"234","severity":1,"message":"259","line":346,"column":14,"nodeType":"166","messageId":"236","endLine":346,"endColumn":15},{"ruleId":"234","severity":1,"message":"253","line":348,"column":13,"nodeType":"166","messageId":"236","endLine":348,"endColumn":19},{"ruleId":"234","severity":1,"message":"253","line":350,"column":13,"nodeType":"166","messageId":"236","endLine":350,"endColumn":19},{"ruleId":"234","severity":1,"message":"256","line":355,"column":9,"nodeType":"166","messageId":"236","endLine":355,"endColumn":17},{"ruleId":"164","severity":1,"message":"260","line":382,"column":7,"nodeType":"166","messageId":"167","endLine":382,"endColumn":18},{"ruleId":"164","severity":1,"message":"261","line":509,"column":10,"nodeType":"166","messageId":"167","endLine":509,"endColumn":24},{"ruleId":"164","severity":1,"message":"262","line":509,"column":26,"nodeType":"166","messageId":"167","endLine":509,"endColumn":43},{"ruleId":"164","severity":1,"message":"263","line":687,"column":11,"nodeType":"166","messageId":"167","endLine":687,"endColumn":14},{"ruleId":"168","severity":1,"message":"264","line":701,"column":26,"nodeType":"170","endLine":701,"endColumn":28,"suggestions":"265"},{"ruleId":"168","severity":1,"message":"266","line":797,"column":32,"nodeType":"170","endLine":797,"endColumn":40,"suggestions":"267"},{"ruleId":"168","severity":1,"message":"268","line":17,"column":25,"nodeType":"170","endLine":17,"endColumn":27,"suggestions":"269"},{"ruleId":"168","severity":1,"message":"270","line":420,"column":24,"nodeType":"170","endLine":420,"endColumn":44,"suggestions":"271"},"no-native-reassign",["272"],"no-negated-in-lhs",["273"],"no-unused-vars","'setSources' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history.location.pathname' and 'setLocale'. Either include them or remove the dependency array.","ArrayExpression",["274"],"React Hook useEffect has missing dependencies: 'history', 'setIsAuthenticated', and 'setUser'. Either include them or remove the dependency array.",["275"],"React Hook useEffect has missing dependencies: 'fatwa.link' and 'history'. Either include them or remove the dependency array.",["276"],"React Hook useEffect has missing dependencies: 'abortController' and 'options'. Either include them or remove the dependency array.",["277"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Redirect' is defined but never used.","'sources' is assigned a value but never used.","'searchInput' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'url.page', and 'url.q'. Either include them or remove the dependency array.",["278"],"React Hook useEffect has missing dependencies: 'btns' and 'perPage'. Either include them or remove the dependency array. If 'setPages' needs the current value of 'perPage', you can also switch to useReducer instead of useState and read 'perPage' in the reducer.",["279"],"React Hook useEffect has missing dependencies: 'abortController', 'locale', and 'signal'. Either include them or remove the dependency array.",["280"],"React Hook useEffect has missing dependencies: 'match.params._id' and 'user._id'. Either include them or remove the dependency array.",["281"],"'emptyFieldWarning' is defined but never used.","React Hook useEffect has missing dependencies: 'setIdIsValid' and 'validateId'. Either include them or remove the dependency array. If 'setIdIsValid' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["282"],"React Hook useEffect has missing dependencies: 'history' and 'user'. Either include them or remove the dependency array.",["283"],"React Hook useEffect has missing dependencies: 'resend' and 'step'. Either include them or remove the dependency array.",["284"],"React Hook useEffect has missing dependencies: 'fatwaToEdit' and 'setFatwaToEdit'. Either include them or remove the dependency array.",["285"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["286"],["287"],"React Hook useEffect has a missing dependency: 'match.params._id'. Either include it or remove the dependency array.",["288"],"'OutsideClick' is defined but never used.","'defaultValidation' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["289","290"],"React Hook useEffect has a missing dependency: 'locale'. Either include it or remove the dependency array.",["291"],"React Hook useEffect has missing dependencies: 'history.location.pathname' and 'history.location.search'. Either include them or remove the dependency array.",["292"],"React Hook useEffect has missing dependencies: 'abortController', 'locale', 'signal', and 'wrongLan'. Either include them or remove the dependency array.",["293"],"no-extend-native","String prototype is read only, properties should not be added.","AssignmentExpression","unexpected","'nMultConsecCharType' is assigned a value but never used.","'nMultRepChar' is assigned a value but never used.","'nMultConsecSymbol' is assigned a value but never used.","'nMultRequirements' is assigned a value but never used.","'nReqCharType' is assigned a value but never used.","'nMultAlphaUC' is assigned a value but never used.","'nMultAlphaLC' is assigned a value but never used.","'sStandards' is assigned a value but never used.","no-redeclare","'s' is already defined.","redeclared","'sFwd' is already defined.","'sRev' is already defined.","'sAlphaUC' is assigned a value but never used.","'sAlphaLC' is assigned a value but never used.","'sNumber' is assigned a value but never used.","'sSymbol' is assigned a value but never used.","'sMidChar' is assigned a value but never used.","'sAlphasOnly' is assigned a value but never used.","'sNumbersOnly' is assigned a value but never used.","'sRepChar' is assigned a value but never used.","'sConsecAlphaUC' is assigned a value but never used.","'sConsecAlphaLC' is assigned a value but never used.","'sConsecNumber' is assigned a value but never used.","'sSeqAlpha' is assigned a value but never used.","'sSeqNumber' is assigned a value but never used.","'sSeqSymbol' is assigned a value but never used.","'minVal' is already defined.","'nMinReqChars' is already defined.","'sRequirements' is assigned a value but never used.","'arrChars' is already defined.","'arrCharsIds' is already defined.","'arrCharsLen' is already defined.","'c' is already defined.","'sComplexity' is assigned a value but never used.","'passValidation' is assigned a value but never used.","'setPassValidation' is assigned a value but never used.","'lan' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id', 'inputs', and 'setGroupCount'. Either include them or remove the dependency array. If 'setGroupCount' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["294"],"React Hook useEffect has missing dependencies: 'clone' and 'groupCount'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setFinal' needs the current value of 'groupCount'.",["295"],"React Hook useEffect has a missing dependency: 'onResize'. Either include it or remove the dependency array.",["296"],"React Hook useEffect has missing dependencies: 'abortController', 'loading', 'locale', and 'signal'. Either include them or remove the dependency array.",["297"],"no-global-assign","no-unsafe-negation",{"desc":"298","fix":"299"},{"desc":"300","fix":"301"},{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"308","fix":"309"},{"desc":"310","fix":"311"},{"desc":"312","fix":"313"},{"desc":"314","fix":"315"},{"desc":"316","fix":"317"},{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},{"desc":"310","fix":"324"},{"desc":"325","fix":"326"},{"messageId":"327","fix":"328","desc":"329"},{"messageId":"330","fix":"331","desc":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},"Update the dependencies array to be: [history.location.pathname, setLocale]",{"range":"347","text":"348"},"Update the dependencies array to be: [history, setIsAuthenticated, setUser]",{"range":"349","text":"350"},"Update the dependencies array to be: [fatwa.link, history, locale]",{"range":"351","text":"352"},"Update the dependencies array to be: [abortController, match, options]",{"range":"353","text":"354"},"Update the dependencies array to be: [history, history.location, locale, page, url.page, url.q]",{"range":"355","text":"356"},"Update the dependencies array to be: [btns, perPage, total]",{"range":"357","text":"358"},"Update the dependencies array to be: [abortController, locale, signal, sort]",{"range":"359","text":"360"},"Update the dependencies array to be: [match.params._id, user._id]",{"range":"361","text":"362"},"Update the dependencies array to be: [setIdIsValid, validateId]",{"range":"363","text":"364"},"Update the dependencies array to be: [history, setSuccess, user]",{"range":"365","text":"366"},"Update the dependencies array to be: [resend, step, timer]",{"range":"367","text":"368"},"Update the dependencies array to be: [fatwaToEdit, setFatwaToEdit]",{"range":"369","text":"370"},"Update the dependencies array to be: [history, success]",{"range":"371","text":"372"},{"range":"373","text":"360"},"Update the dependencies array to be: [match.params._id]",{"range":"374","text":"375"},"removeEscape",{"range":"376","text":"377"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"378","text":"379"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [locale, value]",{"range":"380","text":"381"},"Update the dependencies array to be: [history.location.pathname, history.location.search]",{"range":"382","text":"383"},"Update the dependencies array to be: [abortController, locale, signal, value, wrongLan]",{"range":"384","text":"385"},"Update the dependencies array to be: [id, inputs, setGroupCount]",{"range":"386","text":"387"},"Update the dependencies array to be: [clone, groupCount, inputs]",{"range":"388","text":"389"},"Update the dependencies array to be: [onResize]",{"range":"390","text":"391"},"Update the dependencies array to be: [filters, sort, api, loading, locale, signal, abortController]",{"range":"392","text":"393"},[2528,2530],"[history.location.pathname, setLocale]",[2560,2562],"[history, setIsAuthenticated, setUser]",[854,862],"[fatwa.link, history, locale]",[1451,1458],"[abortController, match, options]",[1942,1974],"[history, history.location, locale, page, url.page, url.q]",[4630,4637],"[btns, perPage, total]",[22260,22266],"[abortController, locale, signal, sort]",[31787,31789],"[match.params._id, user._id]",[4275,4277],"[setIdIsValid, validateId]",[10954,10966],"[history, setSuccess, user]",[17998,18005],"[resend, step, timer]",[33790,33792],"[fatwaToEdit, setFatwaToEdit]",[49470,49479],"[history, success]",[43442,43448],[46661,46663],"[match.params._id]",[466,467],"",[466,466],"\\",[1218,1225],"[locale, value]",[2240,2242],"[history.location.pathname, history.location.search]",[2978,2985],"[abortController, locale, signal, value, wrongLan]",[21113,21115],"[id, inputs, setGroupCount]",[23854,23862],"[clone, groupCount, inputs]",[682,684],"[onResize]",[12260,12280],"[filters, sort, api, loading, locale, signal, abortController]"]